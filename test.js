data=
{
    "value": [
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_VALIDATION",
            "name": "PL_DATA_VALIDATION",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipeline updates the Post Data Validations",
                "activities": [
                    {
                        "name": "ACT_SP_COPY_COUNT",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[TargetCt]",
                            "storedProcedureParameters": {
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaColumnCount": {
                                    "value": {
                                        "value": "@{activity('ACT_GEN_META_TARGET').output.columnCount}",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_META_TARGET",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:04:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_TARGET_DATASET_PARQUET",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@replace(pipeline().parameters.TargetFileName,'txt','parquet')",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists",
                                "itemName",
                                "columnCount"
                            ],
                            "storeSettings": {
                                "type": "AzureDataLakeStoreReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_FILL_TAR_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "PL_DATA_VALIDATION",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-valuation metadata",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_META_TARGET').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_SP_CPY_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-valuation SP Copy cnt",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_SP_COPY_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "FolderPath": {
                        "type": "string"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "TargetFileName": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    }
                },
                "variables": {
                    "TargetPath": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Land to Acq"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "1500a849-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_CAPTURE_LOGS_ENRICH",
            "name": "PL_DATA_CAPTURE_LOGS_ENRICH",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_SPRC_CAPTURE_LOG",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_META_SOURCE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[LogExtract]",
                            "storedProcedureParameters": {
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ActvityID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaID": {
                                    "value": {
                                        "value": "@pipeline().parameters.DeltaID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ErrorFolderPath": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "Existval": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.Exists",
                                        "type": "Expression"
                                    },
                                    "type": "Boolean"
                                },
                                "IncrementalValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.IncrementValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().parameters.PipelineRunID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetColumnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceFileTable": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetFileTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceFolderPath": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.columnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetFileTable": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.itemName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').output.value[0].TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.EnrichedZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "LowOffsetValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.OffsetValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ExtractionStartTime": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionStartTime",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                },
                                "ExtractionDurationInt": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionDuration",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_META_SOURCE",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT TargetColumnCount, TargetRecordCount, TargetFileTable,TargetFolderPath\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS]\nWHERE RequestID = @{pipeline().parameters.RequestID} \nand SourceZoneID =1 \nand TargetFileTable = @{concat('''',pipeline().parameters.SourceFileName,'''')} \nand ProcessingStatus = 'Success'\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_META_SOURCE",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT  TargetDeltaRecordCount\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM]\nWHERE RequestID = @{pipeline().parameters.RequestID}\nand RequestItemID = @{pipeline().parameters.RequestItemID}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_META_SOURCE",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_META_TARGET",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:04:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_TARGET_DATASET_PARQUET",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.TargetFileName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists",
                                "itemName",
                                "columnCount"
                            ],
                            "storeSettings": {
                                "type": "AzureDataLakeStoreReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "ACT_SP_COPY_COUNT",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[TargetCt]",
                            "storedProcedureParameters": {
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.columnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SUCCESS_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "",
                                "Message": {
                                    "value": "@concat('EnrichLoad : ',pipeline().parameters.SourceFileName)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Initial",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "SUCCESS",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "SUCCESS",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_META_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Meta Target",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_META_TARGET').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Initial",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SP_CPY_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-SP copy cnt",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_SP_COPY_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Initial",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_TARGET_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-LKP Target Count",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Initial",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_META_SOURCE_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_META_SOURCE",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-LKP Meta Source",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_META_SOURCE').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Initial",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG_ERROR",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Capture Log",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_SPRC_CAPTURE_LOG').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Initial",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "ActvityID": {
                        "type": "string"
                    },
                    "PipelineRunID": {
                        "type": "string"
                    },
                    "TargetFileName": {
                        "type": "string"
                    },
                    "IncrementValue": {
                        "type": "string"
                    },
                    "OffsetValue": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "ExtractionStartTime": {
                        "type": "string"
                    },
                    "ExtractionDuration": {
                        "type": "int"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "1500b149-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_VALIDATION_ENRICH",
            "name": "PL_DATA_VALIDATION_ENRICH",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipeline updates the Post Data Validations",
                "activities": [
                    {
                        "name": "ACT_SP_COPY_COUNT",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[TargetCt]",
                            "storedProcedureParameters": {
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.columnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_META_TARGET",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_TARGET_DATASET_PARQUET",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.TargetFileName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists",
                                "itemName",
                                "columnCount"
                            ],
                            "storeSettings": {
                                "type": "AzureDataLakeStoreReadSettings",
                                "recursive": true
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "FolderPath": {
                        "type": "string"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "TargetFileName": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "15009249-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_CAPTURE_LOGS_PV",
            "name": "PL_DATA_CAPTURE_LOGS_PV",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_SPRC_CAPTURE_LOG",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_META_SOURCE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[LogExtract]",
                            "storedProcedureParameters": {
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ActvityID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaID": {
                                    "value": {
                                        "value": "@pipeline().parameters.DeltaID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ErrorFolderPath": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "Existval": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.Exists",
                                        "type": "Expression"
                                    },
                                    "type": "Boolean"
                                },
                                "IncrementalValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.IncrementValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().parameters.PipelineRunID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceColumnCount": {
                                    "value": {
                                        "value": "@{activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetColumnCount}",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceFileTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.LandingZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetColumnCount": {
                                    "value": {
                                        "value": "@{activity('ACT_GEN_META_TARGET').output.columnCount}",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetFileTable": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.itemName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').output.value[0].TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "LowOffsetValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.OffsetValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_META_SOURCE",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT TargetColumnCount, TargetRecordCount\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS]\nWHERE RequestID = @{pipeline().parameters.RequestID}\nand SourceZoneID is null \nand TargetFileTable = @{concat('''',pipeline().parameters.SourceFileName,'''')}\nand ProcessingStatus = 'Success'\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_META_SOURCE",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT  TargetDeltaRecordCount\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM]\nWHERE RequestID = @{pipeline().parameters.RequestID}\nand RequestItemID = @{pipeline().parameters.RequestItemID}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_FILE_EXISTS_CHECK",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_SP_COPY_COUNT",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[TargetCt]",
                            "storedProcedureParameters": {
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaColumnCount": {
                                    "value": {
                                        "value": "@{activity('ACT_GEN_META_TARGET').output.columnCount}",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_META_TARGET",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_TARGET_DATASET_PARQUET",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@replace(pipeline().parameters.TargetFileName,'txt','parquet')",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists",
                                "itemName",
                                "columnCount"
                            ],
                            "storeSettings": {
                                "type": "AzureDataLakeStoreReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SUCCESS_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad : ',activity('ACT_GEN_META_TARGET').output.itemName)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "SUCCESS",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "SUCCESS",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_META_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_source metadata",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_META_TARGET').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_SP_CPY_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_SP_Copy_Cnt",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_SP_COPY_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_META_SRC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_META_SOURCE",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_LKP_Metadata",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_META_SOURCE').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_TAR_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log Lkp Target Cnt",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_CAPTURE_LOG_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_SPRC_CAPTURE_LOG').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "IncrementValue": {
                        "type": "string"
                    },
                    "ActvityID": {
                        "type": "string"
                    },
                    "PipelineRunID": {
                        "type": "string"
                    },
                    "OffsetValue": {
                        "type": "string"
                    },
                    "TargetFileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/PV/Acquisition"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "15009849-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_COPY_FILES_ENRICH",
            "name": "PL_DATA_COPY_FILES_ENRICH",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_MT_COPY_INGEST_ACQUISITION",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_MAPPING",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreWriteSettings",
                                    "copyBehavior": "MergeFiles"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "value": "@json(activity('ACT_GEN_LKP_FETCH_MAPPING').output.firstRow.json_output)",
                                "type": "Expression"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_PARQUET_ACQ",
                                "type": "DatasetReference",
                                "parameters": {
                                    "File": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ADLS_TARGET_FILE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@replace(pipeline().parameters.TargetFolderPath,'/DELTA/','/MERGED/')",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@{concat(pipeline().parameters.TargetObjectName,'.parquet')}",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_CAPTURE_LOGS_ENRICH",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TargetFolderPath": {
                                    "value": "@replace(pipeline().parameters.TargetFolderPath,'/DELTA/','/MERGED/')",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "DeltaID": {
                                    "value": "@pipeline().parameters.DeltaID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "ActvityID": {
                                    "value": "@pipeline().TriggerId",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "TargetFileName": {
                                    "value": "@{concat(pipeline().parameters.TargetObjectName,'.parquet')}",
                                    "type": "Expression"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.rowsCopied",
                                    "type": "Expression"
                                },
                                "SourceFileName": {
                                    "value": "@pipeline().parameters.SourceFileName",
                                    "type": "Expression"
                                },
                                "ExtractionStartTime": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.executionDetails[0].start",
                                    "type": "Expression"
                                },
                                "ExtractionDuration": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.copyDuration",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_MAPPING",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[DATACATALOGUE].[SP_ColumnMapping]",
                                "storedProcedureParameters": {
                                    "RequestID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestID",
                                            "type": "Expression"
                                        }
                                    },
                                    "RequestItemID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestItemID",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_DELTA_FETCH",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ENRICH_CPY_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load -Acq To Enrich Copy",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_MT_COPY_INGEST_ACQUISITION').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_MAPPING_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_MAPPING",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load -Lkp Mapping",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_MAPPING').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    },
                    "TargetObjectName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:09Z"
            },
            "etag": "1500de49-0000-0c00-0000-632aa7010000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_CAPTURE_LOGS",
            "name": "PL_DATA_CAPTURE_LOGS",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_SPRC_CAPTURE_LOG",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_META_SRC_COLUM_CNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[LogExtract]",
                            "storedProcedureParameters": {
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ActvityID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaID": {
                                    "value": {
                                        "value": "@pipeline().parameters.DeltaID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ErrorFolderPath": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "Existval": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.Exists",
                                        "type": "Expression"
                                    },
                                    "type": "Boolean"
                                },
                                "IncrementalValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.IncrementValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().parameters.PipelineRunID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceColumnCount": {
                                    "value": {
                                        "value": "@{activity('ACT_GEN_META_SRC_COLUM_CNT').output.columnCount}",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceFileTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceRecordCount": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.LandingZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetColumnCount": {
                                    "value": {
                                        "value": "@{activity('ACT_GEN_META_TARGET').output.columnCount}",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetFileTable": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.itemName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').output.value[0].TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "LowOffsetValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.OffsetValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ExtractionStartTime": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionStartTime",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                },
                                "ExtractionDurationInt": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionDuration",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_META_TARGET",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:04:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_TARGET_DATASET_PARQUET",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@{replace(pipeline().parameters.TargetFileName,'txt','parquet')}",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "columnCount",
                                "exists",
                                "itemName"
                            ],
                            "storeSettings": {
                                "type": "AzureDataLakeStoreReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_COUNT",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_VALIDATION",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "FolderPath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "FileName": {
                                    "value": "@pipeline().parameters.TargetFileName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "TargetFolderPath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "TargetFileName": {
                                    "value": "@pipeline().parameters.TargetFileName",
                                    "type": "Expression"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": "@pipeline().parameters.TargetDeltaRecordCount",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_EXEC_CAPTURE_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:03:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT  TargetDeltaRecordCount\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM]\nWHERE RequestID = @{pipeline().parameters.RequestID}\nand RequestItemID = @{pipeline().parameters.RequestItemID}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_FILE_EXISTS_CHECK",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SUCCESS_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad : ',activity('ACT_GEN_META_TARGET').output.itemName)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "SUCCESS",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "SUCCESS",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_Stored_Proc",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_SPRC_CAPTURE_LOG').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_META_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_Metadata_Check",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_META_TARGET').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_TAR_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_TargetCount_Check",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_SRC_CNT_ERROR_LOG_copy1",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_SRC_COLUM_CNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_SourceCount_Check",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_META_SRC_COLUM_CNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_META_SRC_COLUM_CNT",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_EXEC_CAPTURE_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:04:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_SOURCE_FILE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "columnCount"
                            ],
                            "storeSettings": {
                                "type": "AzureDataLakeStoreReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "IncrementValue": {
                        "type": "string"
                    },
                    "ActvityID": {
                        "type": "string"
                    },
                    "PipelineRunID": {
                        "type": "string"
                    },
                    "OffsetValue": {
                        "type": "string"
                    },
                    "TargetFileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    },
                    "SourceDeltaRecordCount": {
                        "type": "string"
                    },
                    "ExtractionStartTime": {
                        "type": "string"
                    },
                    "ExtractionDuration": {
                        "type": "int"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Land to Acq"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500d449-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_COPY_FILES_PV",
            "name": "PL_DATA_COPY_FILES_PV",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_MT_COPY_INGEST_ACQUISITION",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_SOURCE_FILE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ADLS_TARGET_FILE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@{replace(pipeline().parameters.SourceFileName,'.txt','.parquet')}",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_CAPTURE_LOGS_PV",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TargetFolderPath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "DeltaID": {
                                    "value": "@pipeline().parameters.DeltaID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "ActvityID": {
                                    "value": "@pipeline().TriggerId",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "TargetFileName": {
                                    "value": "@pipeline().parameters.SourceFileName",
                                    "type": "Expression"
                                },
                                "SourceFileName": {
                                    "value": "@pipeline().parameters.SourceFileName",
                                    "type": "Expression"
                                },
                                "SourceFolderPath": {
                                    "value": "@pipeline().parameters.SourceFolderPath",
                                    "type": "Expression"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.rowsCopied",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load -Copy_Lnd_To_Acq",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_MT_COPY_INGEST_ACQUISITION').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    },
                    "SourceRecordCount": {
                        "type": "string"
                    },
                    "SourceColumnCount": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/PV/Acquisition"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500b849-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_COPY_FILES",
            "name": "PL_DATA_COPY_FILES",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_MT_COPY_INGEST_ACQUISITION",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_SOURCE_FILE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ADLS_TARGET_FILE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@{replace(pipeline().parameters.SourceFileName,'.txt','.parquet')}",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_CAPTURE_LOGS",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TargetFolderPath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "DeltaID": {
                                    "value": "@pipeline().parameters.DeltaID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "ActvityID": {
                                    "value": "@pipeline().TriggerId",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "TargetFileName": {
                                    "value": "@pipeline().parameters.SourceFileName",
                                    "type": "Expression"
                                },
                                "SourceFileName": {
                                    "value": "@pipeline().parameters.SourceFileName",
                                    "type": "Expression"
                                },
                                "SourceFolderPath": {
                                    "value": "@pipeline().parameters.SourceFolderPath",
                                    "type": "Expression"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.rowsCopied",
                                    "type": "Expression"
                                },
                                "SourceDeltaRecordCount": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.rowsRead",
                                    "type": "Expression"
                                },
                                "ExtractionStartTime": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.executionDetails[0].start",
                                    "type": "Expression"
                                },
                                "ExtractionDuration": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.copyDuration",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Copy_Lnd_To_Acq",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_MT_COPY_INGEST_ACQUISITION').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    },
                    "SourceRecordCount": {
                        "type": "string"
                    },
                    "SourceColumnCount": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Land to Acq"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:09Z"
            },
            "etag": "1500ed49-0000-0c00-0000-632aa7010000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ITEMS_PV",
            "name": "PL_DATA_PROCESS_REQUEST_ITEMS_PV",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipeline is responsible for Processing all the Extract Request Items",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "WITH LandingLogs AS \n(SELECT TargetFileTable,RequestID,RequestItemID,TargetColumnCount ,\nTargetRecordCount FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] \nWHERE TargetZoneID=@{pipeline().globalParameters.LandingZoneID} AND RequestId=@{pipeline().parameters.RequestID} AND ProcessingStatus ='Success'),\nAquisitionLogs AS\n(SELECT TargetFileTable,RequestID,RequestItemID FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] \nWHERE TargetZoneID=@{pipeline().globalParameters.AcquisitionZoneID} AND RequestId=@{pipeline().parameters.RequestID} AND ProcessingStatus ='Success')\nSELECT R.LoadStatus , \n\t\tR.RequestID ,\n\t\tR.RequestItemID,\n\t\tR.ObjectName\t\t ,\n\t\tR.TargetFolderPath\t\t ,\n\t\tR.TargetFileTable\t\t\t ,\n\t\tR.SourceFolderPath\t\t ,\n\t\tR.SourceFileTable\t\t\t ,\n\t\tL.TargetFileTable AS SourceDeltaFileTable,\n\t\tR.DeltaExpressionID\t\t ,\n\t\tR.SourceZoneID   ,\n\t\tR.TargetZoneID,\nL.TargetColumnCount SourceColumnCount,\nL.TargetRecordCount SourceRecordCount\nFROM LandingLogs L LEFT OUTER JOIN \nAquisitionLogs A ON (A.RequestID=L.RequestID AND Replace(A.TargetFileTable,'parquet','txt')=L.TargetFileTable)\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R ON\nR.RequestID=L.RequestID\nWHERE A.RequestID IS NULL AND \nR.RequestID = @{pipeline().parameters.RequestID}\nand (R.LoadStatus = 'Initial'\nor R.LoadStatus = 'Delta')\nand cast(R.LoadStartDate as date)  <=  @{concat('''',formatDateTime(utcnow(),'yyyy-MM-dd'),'''')}\nand R.LoadFrequency  =  '@{pipeline().parameters.LoadFrequency}'\nand R.ApprovalStatus = 'Approved'\nand R.TargetZoneID\t= @{pipeline().globalParameters.AcquisitionZoneID}\nand R.ProcessingStatus = 'Active'\nand L.TargetRecordCount>0",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_COPY_FILES_PV",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetFolderPath": {
                                                "value": "@item().TargetFolderPath",
                                                "type": "Expression"
                                            },
                                            "ObjectName": {
                                                "value": "@item().ObjectName",
                                                "type": "Expression"
                                            },
                                            "DeltaID": {
                                                "value": "@item().DeltaExpressionID",
                                                "type": "Expression"
                                            },
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "SourceFolderPath": {
                                                "value": "@item().SourceFolderPath",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "FileName": {
                                                "value": "@item().SourceDeltaFileTable",
                                                "type": "Expression"
                                            },
                                            "SourceFileName": {
                                                "value": "@item().SourceDeltaFileTable",
                                                "type": "Expression"
                                            },
                                            "LoadStatus": {
                                                "value": "@item().LoadStatus",
                                                "type": "Expression"
                                            },
                                            "SourceRecordCount": {
                                                "value": "@item().SourceRecordCount",
                                                "type": "Expression"
                                            },
                                            "SourceColumnCount": {
                                                "value": "@item().SourceColumnCount",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load -Lookup Read Item Request",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_READ_REQUEST_ITEM').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "RequestID": {
                        "type": "int"
                    },
                    "SystemName": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/PV/Acquisition"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:09Z"
            },
            "etag": "1500e349-0000-0c00-0000-632aa7010000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_COPY_FILE_INI",
            "name": "PL_COPY_FILE_INI",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_INI_LANDING_CSV",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ADLS_INI_ACQ_PARQUET",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Folder": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "TargetFolderPath": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Initial_Load_Pipeline"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "15009949-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_COPY_FILES_ENRICH_DELTA",
            "name": "PL_DATA_COPY_FILES_ENRICH_DELTA",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_MT_COPY_INGEST_ACQUISITION",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_MAPPING",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "value": "@json(activity('ACT_GEN_LKP_FETCH_MAPPING').output.firstRow.json_output)",
                                "type": "Expression"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_PARQUET_ACQ",
                                "type": "DatasetReference",
                                "parameters": {
                                    "File": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ADLS_TARGET_FILE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@replace(pipeline().parameters.SourceFileName,pipeline().parameters.ObjectName,pipeline().parameters.TargetObjectName)",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_CAPTURE_LOGS_ENRICH_DELTA",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TargetFolderPath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "DeltaID": {
                                    "value": "@pipeline().parameters.DeltaID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "ActvityID": {
                                    "value": "@pipeline().TriggerId",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "TargetFileName": {
                                    "value": "@replace(pipeline().parameters.SourceFileName,pipeline().parameters.ObjectName,pipeline().parameters.TargetObjectName)",
                                    "type": "Expression"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.rowsCopied",
                                    "type": "Expression"
                                },
                                "SourceFileName": {
                                    "value": "@pipeline().parameters.SourceFileName",
                                    "type": "Expression"
                                },
                                "ExtractionStartTime": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.executionDetails[0].start",
                                    "type": "Expression"
                                },
                                "ExtractionDuration": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.copyDuration",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_MAPPING",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[DATACATALOGUE].[SP_ColumnMapping]",
                                "storedProcedureParameters": {
                                    "RequestID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestID",
                                            "type": "Expression"
                                        }
                                    },
                                    "RequestItemID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestItemID",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_DELTA_FETCH",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_MAPPING_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_MAPPING",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Lkp Mapping",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_MAPPING').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_CPY_ENRICH_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Acq Enrich Delta Copy",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_MT_COPY_INGEST_ACQUISITION').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    },
                    "TargetObjectName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500c849-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_INGEST_ACQUISITION",
            "name": "PL_DATA_INGEST_ACQUISITION",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "If Condition1",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_EXISTS_CHECK_LOGS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('ACT_GEN_LKP_EXISTS_CHECK_LOGS').output.count,0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "ACT_GEN_EXEC_CPY_ACQ",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_COPY_FILES",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetFolderPath": {
                                                "value": "@pipeline().parameters.TargetFolderPath",
                                                "type": "Expression"
                                            },
                                            "ObjectName": {
                                                "value": "@pipeline().parameters.ObjectName",
                                                "type": "Expression"
                                            },
                                            "DeltaID": {
                                                "value": "@pipeline().parameters.DeltaID",
                                                "type": "Expression"
                                            },
                                            "RequestItemID": {
                                                "value": "@pipeline().parameters.RequestItemID",
                                                "type": "Expression"
                                            },
                                            "SourceFolderPath": {
                                                "value": "@pipeline().parameters.SourceFolderPath",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@pipeline().parameters.RequestID",
                                                "type": "Expression"
                                            },
                                            "FileName": {
                                                "value": "@{concat(pipeline().parameters.ObjectName,'_' ,formatDateTime(utcnow(),'yyyy-MMM-dd'),'.parquet')}",
                                                "type": "Expression"
                                            },
                                            "SourceFileName": {
                                                "value": "@pipeline().parameters.SourceFileName",
                                                "type": "Expression"
                                            },
                                            "LoadStatus": {
                                                "value": "@pipeline().parameters.LoadStatus",
                                                "type": "Expression"
                                            },
                                            "SourceRecordCount": {
                                                "value": "@pipeline().parameters.SourceRecordCount",
                                                "type": "Expression"
                                            },
                                            "SourceColumnCount": {
                                                "value": "@pipeline().parameters.SourceColumnCount",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_EXISTS_CHECK_LOGS",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT 1 AS ExistsValue\n  FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS]\nWhere TargetFileTable = @{concat('''',replace(pipeline().parameters.SourceFileName,'.txt',''),'.parquet','''')}\nand RequestItemID = @{pipeline().parameters.RequestItemID}\nand ProcessingStatus = 'Success'\nand TargetZoneID = @{pipeline().globalParameters.AcquisitionZoneID}\nand SourceZoneID = @{pipeline().globalParameters.LandingZoneID}\nand cast(RequestRunDateTime as date) = cast(current_timestamp as date)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_FILE_EXISTS_CHECK",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "string"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "SourceZoneID": {
                        "type": "int"
                    },
                    "TargetZoneID": {
                        "type": "int"
                    },
                    "RequestID": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    },
                    "SourceRecordCount": {
                        "type": "string"
                    },
                    "SourceColumnCount": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Land to Acq"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:10Z"
            },
            "etag": "1500024a-0000-0c00-0000-632aa7020000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ITEMS",
            "name": "PL_DATA_PROCESS_REQUEST_ITEMS",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipeline is responsible for Processing all the Extract Request Items",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:03:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "WITH LandingLogs AS \n(SELECT TargetFileTable,RequestID,RequestItemID,TargetColumnCount ,\nTargetRecordCount,RequestRunDateTime FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] \nWHERE TargetZoneID=@{pipeline().globalParameters.LandingZoneID} AND RequestId=@{pipeline().parameters.RequestID} AND ProcessingStatus ='Success'),\nAquisitionLogs AS\n(SELECT TargetFileTable,RequestID,RequestItemID FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] \nWHERE TargetZoneID=@{pipeline().globalParameters.AcquisitionZoneID} AND RequestId=@{pipeline().parameters.RequestID} AND ProcessingStatus ='Success')\nSELECT R.LoadStatus , \n\t\tR.RequestID ,\n\t\tR.RequestItemID,\n\t\tR.ObjectName\t\t ,\n\t\tR.TargetFolderPath\t\t ,\n\t\tR.TargetFileTable\t\t\t ,\n\t\tR.SourceFolderPath\t\t ,\n\t\tR.SourceFileTable\t\t\t ,\n\t\tL.TargetFileTable AS SourceDeltaFileTable,\n\t\tR.DeltaExpressionID\t\t ,\n\t\tR.SourceZoneID   ,\n\t\tR.TargetZoneID,\nL.TargetColumnCount SourceColumnCount,\nL.TargetRecordCount SourceRecordCount\nFROM LandingLogs L LEFT OUTER JOIN \nAquisitionLogs A ON (A.RequestID=L.RequestID AND Replace(A.TargetFileTable,'parquet','txt')=L.TargetFileTable)\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R ON\nR.RequestID=L.RequestID\nWHERE A.RequestID IS NULL AND \nR.RequestID = @{pipeline().parameters.RequestID}\nand (R.LoadStatus = 'Initial'\nor R.LoadStatus = 'Delta')\nand cast(R.LoadStartDate as date)  <=  @{concat('''',formatDateTime(utcnow(),'yyyy-MM-dd'),'''')}\nand R.LoadFrequency  =  '@{pipeline().parameters.LoadFrequency}'\nand R.ApprovalStatus = 'Approved'\nand R.TargetZoneID\t= @{pipeline().globalParameters.AcquisitionZoneID}\nand R.ProcessingStatus = 'Active'\nand L.TargetRecordCount > 0\nORDER BY L.RequestID,L.RequestRunDateTime",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_COPY_FILES",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetFolderPath": {
                                                "value": "@item().TargetFolderPath",
                                                "type": "Expression"
                                            },
                                            "ObjectName": {
                                                "value": "@item().ObjectName",
                                                "type": "Expression"
                                            },
                                            "DeltaID": {
                                                "value": "@item().DeltaExpressionID",
                                                "type": "Expression"
                                            },
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "SourceFolderPath": {
                                                "value": "@item().SourceFolderPath",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "SourceFileName": {
                                                "value": "@item().SourceDeltaFileTable",
                                                "type": "Expression"
                                            },
                                            "LoadStatus": {
                                                "value": "@item().LoadStatus",
                                                "type": "Expression"
                                            },
                                            "SourceRecordCount": {
                                                "value": "@item().SourceRecordCount",
                                                "type": "Expression"
                                            },
                                            "SourceColumnCount": {
                                                "value": "@item().SourceColumnCount",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Lookup Read Item Request",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_READ_REQUEST_ITEM').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "RequestID": {
                        "type": "int"
                    },
                    "SystemName": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Land to Acq"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:10Z"
            },
            "etag": "1500034a-0000-0c00-0000-632aa7020000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_PV",
            "name": "PL_DATA_PROCESS_REQUEST_PV",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipelines Starts the Processing  of the extraction engine.",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT E.RequestID,\nE.SystemName\nFROM [DATACATALOGUE].[TB_EXTRACT_REQUEST] E\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R\nON E.RequestID=R.RequestID\nWHERE E.ApprovalStatus = 'Approved'\nand E.SystemName = '@{pipeline().parameters.ProjectSource}'\nand R.LoadFrequency=  '@{pipeline().parameters.LoadFrequency}'\nGROUP BY E.RequestID,\nE.SystemName\nORDER BY E.RequestID \n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUESTS",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 17,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_PROCESS_REQUEST_ITEMS_PV",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "SystemName": {
                                                "value": "@item().SystemName",
                                                "type": "Expression"
                                            },
                                            "LoadFrequency": {
                                                "value": "@pipeline().parameters.LoadFrequency",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceName": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load -Lookup Read Request",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_READ_REQUEST').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ProjectSource": {
                        "type": "string",
                        "defaultValue": "HANA_R_ADF_PV"
                    },
                    "LoadFrequency": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/PV/Acquisition"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:10Z"
            },
            "etag": "1500fb49-0000-0c00-0000-632aa7020000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ITEMS_TEMP",
            "name": "PL_DATA_PROCESS_REQUEST_ITEMS_TEMP",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipeline is responsible for Processing all the Extract Request Items",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT  LoadStatus , RequestID ,\nRequestItemID,\nObjectName\t\t ,\nTargetObjectName,\n\t\tTargetFolderPath\t\t ,\n\t\tTargetFileTable\t\t\t ,\n\t\tSourceFolderPath\t\t ,\n\t\tSourceFileTable\t\t\t ,\nSourceDeltaFileTable,\n\t\tDeltaExpressionID\t\t ,\nSourceZoneID   ,\nTargetZoneID\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM]\nWHERE RequestID = @{pipeline().parameters.RequestID}\nand (LoadStatus = 'Initial'\nor LoadStatus = 'Delta')\nand cast(LoadStartDate as date)  <=  @{concat('''',formatDateTime(utcnow(),'yyyy-MM-dd'),'''')}\nand LoadFrequency  =  'Daily'\nand TargetZoneID\t= @{pipeline().globalParameters.AcquisitionZoneID}\nand ProcessingStatus = 'Active'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_COPY_FILE_INI",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "SourceFolderPath": {
                                                "value": "@item().SourceFolderPath",
                                                "type": "Expression"
                                            },
                                            "TargetFolderPath": {
                                                "value": "@item().TargetFolderPath",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "RequestID": {
                        "type": "int"
                    },
                    "SystemName": {
                        "type": "int"
                    }
                },
                "folder": {
                    "name": "Initial_Load_Pipeline"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500c749-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH",
            "name": "PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipeline is responsible for Processing all the Extract Request Items",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "WITH AquisitionLogs AS \n(SELECT TargetFileTable,RequestID,RequestItemID,LoadProcessType,SourceFileTable,RequestRunDateTime FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] \nWHERE TargetZoneID=@{pipeline().globalParameters.AcquisitionZoneID} AND RequestId=@{pipeline().parameters.RequestID} AND ProcessingStatus ='Success'),\nEnrichedLogs AS\n(SELECT TargetFileTable,RequestID,RequestItemID,LoadProcessType,SourceFileTable,RequestRunDateTime FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] \nWHERE TargetZoneID=@{pipeline().globalParameters.EnrichedZoneID} AND RequestId=@{pipeline().parameters.RequestID} AND ProcessingStatus ='Success')\nSELECT case when (A.LoadProcessType='Delta' and (R.IsDeltaInEnrich='N' OR R.IsDeltaInEnrich is NULL)) \n                then 'Delta_Merge' \n                when ((A.LoadProcessType='Initial' OR A.LoadProcessType='Delta') and R.IsDeltaInEnrich='Y') \n                then 'Delta'  \n                else A.LoadProcessType\n                END AS  LoadStatus, \n\t\tR.RequestID ,\n\t\tR.RequestItemID,\n\t\tR.ObjectName\t\t ,\n                R.TargetObjectName\t\t ,\n\t\tR.TargetFolderPath\t\t ,\n\t\tR.TargetFileTable\t\t\t ,\n\t\tR.SourceFolderPath\t\t ,\n\t\tR.SourceFileTable\t\t\t ,\n\t\tA.TargetFileTable AS SourceDeltaFileTable,\n\t\tR.DeltaExpressionID\t\t ,\n\t\tR.SourceZoneID   ,\n\t\tR.TargetZoneID\nFROM AquisitionLogs A LEFT OUTER JOIN \nEnrichedLogs E ON (A.RequestID=E.RequestID AND A.TargetFileTable=E.SourceFileTable)\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R ON\nR.RequestID=A.RequestID\nWHERE E.RequestID IS NULL AND \nR.RequestID = @{pipeline().parameters.RequestID}\nand (R.LoadStatus = 'Initial'\nor R.LoadStatus = 'Delta')\nand cast(R.LoadStartDate as date)  <=  @{concat('''',formatDateTime(utcnow(),'yyyy-MM-dd'),'''')}\nand R.LoadFrequency  =  '@{pipeline().parameters.LoadFrequency}'\nand R.ApprovalStatus = 'Approved'\nand R.TargetZoneID\t= @{pipeline().globalParameters.EnrichedZoneID}\nand R.ProcessingStatus = 'Active'\nOrder By A.RequestID,A.RequestRunDateTime,A.TargetFileTable",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Switch1",
                                    "type": "Switch",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "on": {
                                            "value": "@item().LoadStatus",
                                            "type": "Expression"
                                        },
                                        "cases": [
                                            {
                                                "value": "Delta_Merge",
                                                "activities": [
                                                    {
                                                        "name": "ACT_GEN_EXEC_DELTA_MERGE",
                                                        "type": "ExecutePipeline",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "pipeline": {
                                                                "referenceName": "PL_DATA_COPY_FILES_ENRICH_DELTA_MERGE",
                                                                "type": "PipelineReference"
                                                            },
                                                            "waitOnCompletion": true,
                                                            "parameters": {
                                                                "TargetFolderPath": {
                                                                    "value": "@item().TargetFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "ObjectName": {
                                                                    "value": "@item().ObjectName",
                                                                    "type": "Expression"
                                                                },
                                                                "DeltaID": {
                                                                    "value": "@item().DeltaExpressionID",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestItemID": {
                                                                    "value": "@item().RequestItemID",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFolderPath": {
                                                                    "value": "@item().SourceFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestID": {
                                                                    "value": "@item().RequestID",
                                                                    "type": "Expression"
                                                                },
                                                                "FileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "LoadStatus": {
                                                                    "value": "@item().LoadStatus",
                                                                    "type": "Expression"
                                                                },
                                                                "TargetObjectName": {
                                                                    "value": "@item().TargetObjectName",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "value": "Initial",
                                                "activities": [
                                                    {
                                                        "name": "ACT_GEN_EXEC_FULL_LOAD",
                                                        "type": "ExecutePipeline",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "pipeline": {
                                                                "referenceName": "PL_DATA_COPY_FILES_ENRICH",
                                                                "type": "PipelineReference"
                                                            },
                                                            "waitOnCompletion": true,
                                                            "parameters": {
                                                                "TargetFolderPath": {
                                                                    "value": "@item().TargetFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "ObjectName": {
                                                                    "value": "@item().ObjectName",
                                                                    "type": "Expression"
                                                                },
                                                                "DeltaID": {
                                                                    "value": "@item().DeltaExpressionID",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestItemID": {
                                                                    "value": "@item().RequestItemID",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFolderPath": {
                                                                    "value": "@item().SourceFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestID": {
                                                                    "value": "@item().RequestID",
                                                                    "type": "Expression"
                                                                },
                                                                "FileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "LoadStatus": {
                                                                    "value": "@item().LoadStatus",
                                                                    "type": "Expression"
                                                                },
                                                                "TargetObjectName": {
                                                                    "value": "@item().TargetObjectName",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "value": "Delta",
                                                "activities": [
                                                    {
                                                        "name": "ACT_GEN_EXEC_ENR_DELTA",
                                                        "type": "ExecutePipeline",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "pipeline": {
                                                                "referenceName": "PL_DATA_COPY_FILES_ENRICH_DELTA",
                                                                "type": "PipelineReference"
                                                            },
                                                            "waitOnCompletion": true,
                                                            "parameters": {
                                                                "TargetFolderPath": {
                                                                    "value": "@item().TargetFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "ObjectName": {
                                                                    "value": "@item().ObjectName",
                                                                    "type": "Expression"
                                                                },
                                                                "DeltaID": {
                                                                    "value": "@item().DeltaExpressionID",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestItemID": {
                                                                    "value": "@item().RequestItemID",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFolderPath": {
                                                                    "value": "@item().SourceFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestID": {
                                                                    "value": "@item().RequestID",
                                                                    "type": "Expression"
                                                                },
                                                                "FileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "LoadStatus": {
                                                                    "value": "@item().LoadStatus",
                                                                    "type": "Expression"
                                                                },
                                                                "TargetObjectName": {
                                                                    "value": "@item().TargetObjectName",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Lookup Read Item Request",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_READ_REQUEST_ITEM').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "RequestID": {
                        "type": "int"
                    },
                    "SystemName": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:10Z"
            },
            "etag": "1500fc49-0000-0c00-0000-632aa7020000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_COPY_CHECK",
            "name": "PL_DATA_COPY_CHECK",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "Switch1",
                        "type": "Switch",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "on": {
                                "value": "@pipeline().parameters.LoadStatus",
                                "type": "Expression"
                            },
                            "cases": [
                                {
                                    "value": "Delta",
                                    "activities": [
                                        {
                                            "name": "Execute Pipeline1",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "PL_DATA_COPY_FILES_ENRICH_DELTA",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "TargetFolderPath": {
                                                        "value": "@pipeline().parameters.TargetFolderPath",
                                                        "type": "Expression"
                                                    },
                                                    "ObjectName": {
                                                        "value": "@pipeline().parameters.ObjectName",
                                                        "type": "Expression"
                                                    },
                                                    "DeltaID": {
                                                        "value": "@pipeline().parameters.DeltaID",
                                                        "type": "Expression"
                                                    },
                                                    "RequestItemID": {
                                                        "value": "@pipeline().parameters.RequestItemID",
                                                        "type": "Expression"
                                                    },
                                                    "SourceFolderPath": {
                                                        "value": "@pipeline().parameters.SourceFolderPath",
                                                        "type": "Expression"
                                                    },
                                                    "RequestID": {
                                                        "value": "@pipeline().parameters.RequestID",
                                                        "type": "Expression"
                                                    },
                                                    "FileName": {
                                                        "value": "@{concat(pipeline().parameters.ObjectName,'_' ,formatDateTime(utcnow(),'yyyy-MMM-dd'),'.parquet')}",
                                                        "type": "Expression"
                                                    },
                                                    "SourceFileName": {
                                                        "value": "@pipeline().parameters.SourceFileName",
                                                        "type": "Expression"
                                                    },
                                                    "LoadStatus": {
                                                        "value": "@pipeline().parameters.LoadStatus",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "Initial",
                                    "activities": [
                                        {
                                            "name": "Execute Pipeline1_copy1",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "PL_DATA_COPY_FILES_ENRICH",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "TargetFolderPath": {
                                                        "value": "@pipeline().parameters.TargetFolderPath",
                                                        "type": "Expression"
                                                    },
                                                    "ObjectName": {
                                                        "value": "@pipeline().parameters.ObjectName",
                                                        "type": "Expression"
                                                    },
                                                    "DeltaID": {
                                                        "value": "@pipeline().parameters.DeltaID",
                                                        "type": "Expression"
                                                    },
                                                    "RequestItemID": {
                                                        "value": "@pipeline().parameters.RequestItemID",
                                                        "type": "Expression"
                                                    },
                                                    "SourceFolderPath": {
                                                        "value": "@pipeline().parameters.SourceFolderPath",
                                                        "type": "Expression"
                                                    },
                                                    "RequestID": {
                                                        "value": "@pipeline().parameters.RequestID",
                                                        "type": "Expression"
                                                    },
                                                    "FileName": {
                                                        "value": "@{concat(pipeline().parameters.ObjectName,'_' ,formatDateTime(utcnow(),'yyyy-MMM-dd'),'.parquet')}",
                                                        "type": "Expression"
                                                    },
                                                    "SourceFileName": {
                                                        "value": "@pipeline().parameters.SourceFileName",
                                                        "type": "Expression"
                                                    },
                                                    "LoadStatus": {
                                                        "value": "@pipeline().parameters.LoadStatus",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:10Z"
            },
            "etag": "1500f549-0000-0c00-0000-632aa7020000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST",
            "name": "PL_DATA_PROCESS_REQUEST",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipelines Starts the Processing  of the extraction engine.",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:03:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT E.RequestID,\nE.SystemName\nFROM [DATACATALOGUE].[TB_EXTRACT_REQUEST] E\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R\nON E.RequestID=R.RequestID\nWHERE E.ApprovalStatus = 'Approved'\nand E.SystemName = '@{pipeline().parameters.ProjectSource}'\nand R.LoadFrequency=  '@{pipeline().parameters.LoadFrequency}'\nGROUP BY E.RequestID,\nE.SystemName\nORDER BY E.RequestID \n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUESTS",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_PROCESS_REQUEST_ITEMS",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "SystemName": {
                                                "value": "@item().SystemName",
                                                "type": "Expression"
                                            },
                                            "LoadFrequency": {
                                                "value": "@pipeline().parameters.LoadFrequency",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceName": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Lookup Read Request",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_READ_REQUEST').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ProjectSource": {
                        "type": "string",
                        "defaultValue": "HANA_R_ADF_PV"
                    },
                    "LoadFrequency": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Land to Acq"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:11Z"
            },
            "etag": "1500144a-0000-0c00-0000-632aa7030000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ENRICH",
            "name": "PL_DATA_PROCESS_REQUEST_ENRICH",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipelines Starts the Processing  of the extraction engine.",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT E.RequestID,\nE.SystemName\nFROM [DATACATALOGUE].[TB_EXTRACT_REQUEST] E\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R\nON E.RequestID=R.RequestID\nWHERE E.ApprovalStatus = 'Approved'\nand E.SystemName = '@{pipeline().parameters.ProjectSource}'\nand R.LoadFrequency=  '@{pipeline().parameters.LoadFrequency}'\nGROUP BY E.RequestID,\nE.SystemName\nORDER BY E.RequestID \n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUESTS",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 10,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "SystemName": {
                                                "value": "@item().SystemName",
                                                "type": "Expression"
                                            },
                                            "LoadFrequency": {
                                                "value": "@pipeline().parameters.LoadFrequency",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceName": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Lookup Read Request",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_READ_REQUEST').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ProjectSource": {
                        "type": "string",
                        "defaultValue": "HANA_R_ADF_PV"
                    },
                    "LoadFrequency": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:11Z"
            },
            "etag": "15000e4a-0000-0c00-0000-632aa7030000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_TEMP",
            "name": "PL_DATA_PROCESS_REQUEST_TEMP",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipelines Starts the Processing  of the extraction engine.",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT RequestID,\n\t   SystemName\nFROM [DATACATALOGUE].[TB_EXTRACT_REQUEST]\nWHERE SystemName = @{concat('''',pipeline().parameters.SystemName,'''')}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUESTS",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_PROCESS_REQUEST_ITEMS_TEMP",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "SystemName": {
                                                "value": "@item().SystemName",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SystemName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Initial_Load_Pipeline"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:09Z"
            },
            "etag": "1500e549-0000-0c00-0000-632aa7010000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_INGEST_ACQUISITION_ENRICH",
            "name": "PL_DATA_INGEST_ACQUISITION_ENRICH",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "If Condition1",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_EXISTS_CHECK_LOGS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('ACT_GEN_LKP_EXISTS_CHECK_LOGS').output.count,0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Execute Pipeline1",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_COPY_CHECK",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetFolderPath": {
                                                "value": "@pipeline().parameters.TargetFolderPath",
                                                "type": "Expression"
                                            },
                                            "ObjectName": {
                                                "value": "@pipeline().parameters.ObjectName",
                                                "type": "Expression"
                                            },
                                            "DeltaID": {
                                                "value": "@pipeline().parameters.DeltaID",
                                                "type": "Expression"
                                            },
                                            "RequestItemID": {
                                                "value": "@pipeline().parameters.RequestItemID",
                                                "type": "Expression"
                                            },
                                            "SourceFolderPath": {
                                                "value": "@pipeline().parameters.SourceFolderPath",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@pipeline().parameters.RequestID",
                                                "type": "Expression"
                                            },
                                            "FileName": {
                                                "value": "@{concat(pipeline().parameters.ObjectName,'_' ,formatDateTime(utcnow(),'yyyy-MMM-dd'),'.parquet')}",
                                                "type": "Expression"
                                            },
                                            "SourceFileName": {
                                                "value": "@pipeline().parameters.SourceFileName",
                                                "type": "Expression"
                                            },
                                            "LoadStatus": {
                                                "value": "@pipeline().parameters.LoadStatus",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_EXISTS_CHECK_LOGS",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT 1 AS ExistsValue\n  FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS]\nWhere SourceFileTable = @{concat('''',pipeline().parameters.SourceFileName,'''')}\nand RequestItemID = @{pipeline().parameters.RequestItemID}\nand ProcessingStatus = 'Success'\nand TargetZoneID = @{pipeline().globalParameters.EnrichedZoneID}\nand SourceZoneID = @{pipeline().globalParameters.AcquisitionZoneID}\nand cast(RequestRunDateTime as date) = cast(current_timestamp as date)",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_FILE_EXISTS_CHECK",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "string"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "SourceZoneID": {
                        "type": "int"
                    },
                    "TargetZoneID": {
                        "type": "int"
                    },
                    "RequestID": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:10Z"
            },
            "etag": "1500094a-0000-0c00-0000-632aa7020000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH_PV",
            "name": "PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH_PV",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipeline is responsible for Processing all the Extract Request Items",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "WITH AquisitionLogs AS \n(SELECT TargetFileTable,RequestID,RequestItemID, LoadProcessType,SourceFileTable FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] \nWHERE TargetZoneID=@{pipeline().globalParameters.AcquisitionZoneID} AND RequestId=@{pipeline().parameters.RequestID} AND ProcessingStatus ='Success'),\nEnrichedLogs AS\n(SELECT TargetFileTable,RequestID,RequestItemID,LoadProcessType,SourceFileTable FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] \nWHERE TargetZoneID=@{pipeline().globalParameters.EnrichedZoneID} AND RequestId=@{pipeline().parameters.RequestID} AND ProcessingStatus ='Success')\nSELECT \n        case when (A.LoadProcessType='Delta' and (R.IsDeltaInEnrich='N' OR R.IsDeltaInEnrich is NULL)) \n                then 'Delta_Merge' \n                when (A.LoadProcessType='Delta' and R.IsDeltaInEnrich='Y') \n                then 'Delta'  \n                else A.LoadProcessType\n                END AS  LoadStatus, \n\t\tR.RequestID ,\n\t\tR.RequestItemID,\n\t\tR.ObjectName\t\t ,\n                R.TargetObjectName\t\n\t\tR.TargetFolderPath\t\t ,\n\t\tR.TargetFileTable\t\t\t ,\n\t\tR.SourceFolderPath\t\t ,\n\t\tR.SourceFileTable\t\t\t ,\n\t\tA.TargetFileTable AS SourceDeltaFileTable,\n\t\tR.DeltaExpressionID\t\t ,\n\t\tR.SourceZoneID   ,\n\t\tR.TargetZoneID\nFROM AquisitionLogs A LEFT OUTER JOIN \nEnrichedLogs E ON (A.RequestID=E.RequestID AND A.TargetFileTable=E.SourceFileTable)\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R ON\nR.RequestID=A.RequestID\nWHERE E.RequestID IS NULL AND \nR.RequestID = @{pipeline().parameters.RequestID}\nand (R.LoadStatus = 'Initial'\nor R.LoadStatus = 'Delta')\nand cast(R.LoadStartDate as date)  <=  @{concat('''',formatDateTime(utcnow(),'yyyy-MM-dd'),'''')}\nand R.LoadFrequency  =  '@{pipeline().parameters.LoadFrequency}'\nand R.ApprovalStatus = 'Approved'\nand R.TargetZoneID\t= @{pipeline().globalParameters.EnrichedZoneID}\nand R.ProcessingStatus = 'Active'\nOrder By A.TargetFileTable",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Switch1",
                                    "type": "Switch",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "on": {
                                            "value": "@item().LoadStatus",
                                            "type": "Expression"
                                        },
                                        "cases": [
                                            {
                                                "value": "Delta",
                                                "activities": [
                                                    {
                                                        "name": "ACT_GEN_EXEP_DELTA_LOAD",
                                                        "type": "ExecutePipeline",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "pipeline": {
                                                                "referenceName": "PL_DATA_COPY_FILES_ENRICH_DELTA",
                                                                "type": "PipelineReference"
                                                            },
                                                            "waitOnCompletion": true,
                                                            "parameters": {
                                                                "TargetFolderPath": {
                                                                    "value": "@item().TargetFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "ObjectName": {
                                                                    "value": "@item().ObjectName",
                                                                    "type": "Expression"
                                                                },
                                                                "DeltaID": {
                                                                    "value": "@item().DeltaExpressionID",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestItemID": {
                                                                    "value": "@item().RequestItemID",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFolderPath": {
                                                                    "value": "@item().SourceFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestID": {
                                                                    "value": "@item().RequestID",
                                                                    "type": "Expression"
                                                                },
                                                                "FileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "LoadStatus": {
                                                                    "value": "@item().LoadStatus",
                                                                    "type": "Expression"
                                                                },
                                                                "TargetObjectName": {
                                                                    "value": "@item().TargetObjectName",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "value": "Initial",
                                                "activities": [
                                                    {
                                                        "name": "ACT_GEN_EXEP_INITIAL_LOAD",
                                                        "type": "ExecutePipeline",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "pipeline": {
                                                                "referenceName": "PL_DATA_COPY_FILES_ENRICH",
                                                                "type": "PipelineReference"
                                                            },
                                                            "waitOnCompletion": true,
                                                            "parameters": {
                                                                "TargetFolderPath": {
                                                                    "value": "@item().TargetFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "ObjectName": {
                                                                    "value": "@item().ObjectName",
                                                                    "type": "Expression"
                                                                },
                                                                "DeltaID": {
                                                                    "value": "@item().DeltaExpressionID",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestItemID": {
                                                                    "value": "@item().RequestItemID",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFolderPath": {
                                                                    "value": "@item().SourceFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestID": {
                                                                    "value": "@item().RequestID",
                                                                    "type": "Expression"
                                                                },
                                                                "FileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "LoadStatus": {
                                                                    "value": "@item().LoadStatus",
                                                                    "type": "Expression"
                                                                },
                                                                "TargetObjectName": {
                                                                    "value": "@item().TargetObjectName",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "value": "Delta_Merge",
                                                "activities": [
                                                    {
                                                        "name": "ACT_GEN_EXEP_DELTA_MERGE",
                                                        "type": "ExecutePipeline",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "pipeline": {
                                                                "referenceName": "PL_DATA_COPY_FILES_ENRICH_DELTA_MERGE",
                                                                "type": "PipelineReference"
                                                            },
                                                            "waitOnCompletion": true,
                                                            "parameters": {
                                                                "TargetFolderPath": {
                                                                    "value": "@item().TargetFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "ObjectName": {
                                                                    "value": "@item().ObjectName",
                                                                    "type": "Expression"
                                                                },
                                                                "DeltaID": {
                                                                    "value": "@item().DeltaExpressionID",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestItemID": {
                                                                    "value": "@item().RequestItemID",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFolderPath": {
                                                                    "value": "@item().SourceFolderPath",
                                                                    "type": "Expression"
                                                                },
                                                                "RequestID": {
                                                                    "value": "@item().RequestID",
                                                                    "type": "Expression"
                                                                },
                                                                "FileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "SourceFileName": {
                                                                    "value": "@item().SourceDeltaFileTable",
                                                                    "type": "Expression"
                                                                },
                                                                "LoadStatus": {
                                                                    "value": "@item().LoadStatus",
                                                                    "type": "Expression"
                                                                },
                                                                "TargetObjectName": {
                                                                    "value": "@item().TargetObjectName",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Lookup Read Item Request",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_READ_REQUEST_ITEM').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "RequestID": {
                        "type": "int"
                    },
                    "SystemName": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/PV/Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:10Z"
            },
            "etag": "1500014a-0000-0c00-0000-632aa7020000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_TRIGER_PIPELINE",
            "name": "PL_DATA_TRIGER_PIPELINE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_EXEC_LAND_TO_ACQ",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_PROCESS_REQUEST",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ProjectSource": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "LoadFrequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ACQ_ENRICHED",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_EXEC_LAND_TO_ACQ",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_PROCESS_REQUEST_ENRICH",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ProjectSource": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "LoadFrequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ProjectSource": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:12Z"
            },
            "etag": "1500214a-0000-0c00-0000-632aa7040000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ENRICH_PV",
            "name": "PL_DATA_PROCESS_REQUEST_ENRICH_PV",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipelines Starts the Processing  of the extraction engine.",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT E.RequestID,\nE.SystemName\nFROM [DATACATALOGUE].[TB_EXTRACT_REQUEST] E\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R\nON E.RequestID=R.RequestID\nWHERE E.ApprovalStatus = 'Approved'\nand E.SystemName = '@{pipeline().parameters.ProjectSource}'\nand R.LoadFrequency=  '@{pipeline().parameters.LoadFrequency}'\nGROUP BY E.RequestID,\nE.SystemName\nORDER BY E.RequestID \n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUESTS",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 17,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH_PV",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "SystemName": {
                                                "value": "@item().SystemName",
                                                "type": "Expression"
                                            },
                                            "LoadFrequency": {
                                                "value": "@pipeline().parameters.LoadFrequency",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceName": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Lookup Read Request",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_READ_REQUEST').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ProjectSource": {
                        "type": "string",
                        "defaultValue": "HANA_R_ADF_PV"
                    },
                    "LoadFrequency": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/PV/Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:11Z"
            },
            "etag": "1500124a-0000-0c00-0000-632aa7030000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_TRIGER_PIPELINE_PV",
            "name": "PL_DATA_TRIGER_PIPELINE_PV",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_EXEC_LAND_TO_ACQ",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_PROCESS_REQUEST_PV",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ProjectSource": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "LoadFrequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ACQ_ENRICHED",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_EXEC_LAND_TO_ACQ",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_PROCESS_REQUEST_ENRICH_PV",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ProjectSource": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "LoadFrequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ProjectSource": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:11Z"
            },
            "etag": "15001c4a-0000-0c00-0000-632aa7030000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_ENRICHED_FILE_LOAD",
            "name": "PL_ENRICHED_FILE_LOAD",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_FETCH_MAPPING",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[DATACATALOGUE].[SP_ColumnMapping]",
                                "storedProcedureParameters": {
                                    "RequestID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestID",
                                            "type": "Expression"
                                        }
                                    },
                                    "RequestItemID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestItemID",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_DELTA_FETCH",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "ACT_MT_COPY_INGEST_ACQUISITION",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_MAPPING",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_LANDING",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "value": "@json(activity('ACT_GEN_LKP_FETCH_MAPPING').output.firstRow.json_output)",
                                "type": "Expression"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_SOURCE_ACQ",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ADLS_INI_ENRICHED",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Folder": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ACT_GEN_LKP_PRIMARY_KEYS",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "with Positions as \n (\nSELECT CHARINDEX('Target.', SourceMetadataInfo) Position_Target, \nCHARINDEX('=', SourceMetadataInfo) Position_equal,\nCASE WHEN (CHARINDEX('and', SourceMetadataInfo)= 0 )\nTHEN LEN( SourceMetadataInfo) + 3\nELSE CHARINDEX('and', SourceMetadataInfo)\nEND as Position_ID_and,\nSourceMetadataInfo\nfrom  [DATACATALOGUE].[TB_REQUEST_ITEM]\nwhere TargetFolderPath like '%ENRICHED%'\nAND SourceMetadataInfo IS NOT NULL\nAND RequestItemID = @{pipeline().parameters.RequestItemID}) \nselect SourceMetadataInfo\n,CONCAT(TRIM(SUBSTRING(SourceMetadataInfo , CHARINDEX('Target.', SourceMetadataInfo) + 7 , Position_ID_and - CHARINDEX('Target.', SourceMetadataInfo) -7 )) \n,CASE WHEN (CHARINDEX('and', SourceMetadataInfo)= 0 )\nTHEN ''\nELSE CONCAT(',',TRIM(SUBSTRING(SUBSTRING(SourceMetadataInfo , Position_ID_and , 200) , CHARINDEX('Target.', SUBSTRING(SourceMetadataInfo , Position_ID_and , 200)) + 7 , LEN(SUBSTRING(SourceMetadataInfo , Position_ID_and , 200)) - CHARINDEX('Target.', SUBSTRING(SourceMetadataInfo , Position_ID_and , 200)) -4 )))\nEND) Primary_keys\nfrom Positions",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_ASQL_PRIMARY_KEY",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Notebook1",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_PRIMARY_KEYS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/DIF/Enriched-Merge-Initial",
                            "baseParameters": {
                                "FolderPath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "Filename": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "Columns": {
                                    "value": "@{activity('ACT_GEN_LKP_PRIMARY_KEYS').output.value[0].SourceMetadataInfo}",
                                    "type": "Expression"
                                },
                                "Datefield": "LAST_ACTION_DATETIME",
                                "ADF_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "Env_Path": {
                                    "value": "@pipeline().globalParameters.ADLS_URL",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_Databricks_CIF",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "DatabricksURL": {
                                    "value": "@pipeline().globalParameters.DatabricksURL",
                                    "type": "Expression"
                                },
                                "DatabricksResource": {
                                    "value": "@pipeline().globalParameters.DatabricksResourceID",
                                    "type": "Expression"
                                },
                                "ClusterID": {
                                    "value": "@pipeline().globalParameters.ClusterID",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_LANDING",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT  TargetFolderPath\t\t\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM]\nWHERE  cast(LoadStartDate as date)  <=  @{concat('''',formatDateTime(utcnow(),'yyyy-MM-dd'),'''')}\nand LoadFrequency  =  'Daily'\nand ApprovalStatus = 'Approved'\nand TargetZoneID\t= @{pipeline().globalParameters.LandingZoneID}\nand ProcessingStatus = 'Active'\nand ObjectName = @{concat('''',pipeline().parameters.ObjectName,'''')}\nand RequestID = @{pipeline().parameters.RequestID}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlTable2",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "RequestID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Initial_Load_Pipeline"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "1500a649-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH_INITIAL",
            "name": "PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH_INITIAL",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipeline is responsible for Processing all the Extract Request Items",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT  LoadStatus , RequestID ,\nRequestItemID,\nTargetObjectName\t\t ,\n\t\tTargetFolderPath\t\t ,\n\t\tTargetFileTable\t\t\t ,\n\t\tSourceFolderPath\t\t ,\n\t\tSourceFileTable\t\t\t ,\nSourceDeltaFileTable,\n\t\tDeltaExpressionID\t\t ,\nSourceZoneID   ,\nTargetZoneID,\nSourceMetadataInfo\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM]\nWHERE RequestID = @{pipeline().parameters.RequestID}\nand (LoadStatus = 'Initial'\nor LoadStatus = 'Delta')\nand cast(LoadStartDate as date)  <=  @{concat('''',formatDateTime(utcnow(),'yyyy-MM-dd'),'''')}\nand LoadFrequency  =  'Daily'\nand TargetZoneID\t= @{pipeline().globalParameters.EnrichedZoneID}\nand ProcessingStatus = 'Active'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_ENRICHED_FILE_LOAD",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "SourceFolderPath": {
                                                "value": "@item().SourceFolderPath",
                                                "type": "Expression"
                                            },
                                            "TargetFolderPath": {
                                                "value": "@item().TargetFolderPath",
                                                "type": "Expression"
                                            },
                                            "LoadStatus": {
                                                "value": "@item().LoadStatus",
                                                "type": "Expression"
                                            },
                                            "ObjectName": {
                                                "value": "@item().TargetObjectName",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "RequestID": {
                        "type": "int"
                    },
                    "SystemName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Initial_Load_Pipeline"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500bd49-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ENRICH_INITIAL",
            "name": "PL_DATA_PROCESS_REQUEST_ENRICH_INITIAL",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipelines Starts the Processing  of the extraction engine.",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT RequestID,\n\t   SystemName\nFROM [DATACATALOGUE].[TB_EXTRACT_REQUEST]\nWHERE SystemName = @{concat('''',pipeline().parameters.SystemName,'''')}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUESTS",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH_INITIAL",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "SystemName": {
                                                "value": "@item().SystemName",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SystemName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Initial_Load_Pipeline"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:09Z"
            },
            "etag": "1500da49-0000-0c00-0000-632aa7010000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_ENRICH_DELETE_DELTA",
            "name": "PL_DATA_ENRICH_DELETE_DELTA",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_UNPROCESSED_FILES",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select SourceFolderPath,SourceFileTable FROM\n[DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS_MERGE] \nwhere \n   [DeltaLoadStatus]='Success' \n  AND [MergeStatus]='Success' \n  AND [IsDeltaDeleted]='N'\n  AND [MergeFrequency]='@{pipeline().parameters.MergeFrequency}'\n  AND CAST(RequestRunDateTime AS Date)<DATEADD(day,@{mul(int(pipeline().parameters.RetentionPeriod),-1)}, cast(current_timestamp as date))\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_IT_FOREACH_DELETE_DELTA",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_UNPROCESSED_FILES",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_UNPROCESSED_FILES').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "ACT_GEN_DEL_DELTA_FILES",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "DS_ADLS_TARGET_DATASET_PARQUET",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FolderPath": "@item().SourceFolderPath",
                                                "FileName": "@item().SourceFileTable"
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureDataLakeStoreReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                },
                                {
                                    "name": "ACT_GEN_SP_DELETE_STATUS_UPDATE",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_DEL_DELTA_FILES",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[DATACATALOGUE].[LogExtract_merge]",
                                        "storedProcedureParameters": {
                                            "ActvityID": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DeltaID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "DeltaLoadStatus": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadProcessType": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "MergeFrequency": {
                                                "value": {
                                                    "value": "@pipeline().parameters.MergeFrequency",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "MergeStatus": {
                                                "value": "Delete",
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "RequestID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "RequestItemID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "RequestRunDateTime": {
                                                "value": null,
                                                "type": "DateTime"
                                            },
                                            "SourceColumnCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceFileTable": {
                                                "value": {
                                                    "value": "@item().SourceFileTable",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceFolderPath": {
                                                "value": {
                                                    "value": "@item().SourceFolderPath",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceRecordCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceSchemaName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "SourceZoneID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetColumnCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetFileTable": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "TargetFolderPath": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "TargetRecordCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetSchemaName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "TargetZoneID": {
                                                "value": null,
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS_ASQL_CONFIG_DATABASE",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "ACT_GEN_EXEC_ERROR_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_SP_DELETE_STATUS_UPDATE",
                                            "dependencyConditions": [
                                                "Failed",
                                                "Skipped"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": {
                                                "value": "@trim(concat(if(equals(string(activity('ACT_GEN_DEL_DELTA_FILES')?.error?.message),''), '', 'ACT_GEN_DEL_DELTA_FILES'),' '\n,if(equals(string(activity('ACT_GEN_SP_DELETE_STATUS_UPDATE')?.error?.message),''), '', 'ACT_GEN_SP_DELETE_STATUS_UPDATE')))",
                                                "type": "Expression"
                                            },
                                            "Message": {
                                                "value": "@trim(concat(activity('ACT_GEN_DEL_DELTA_FILES')?.error?.message,' '\n,activity('ACT_GEN_SP_DELETE_STATUS_UPDATE')?.error?.message))",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "LoadProcessType": "Acq Load",
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "Failure",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.LandingZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "ERROR",
                                            "Pipeline_TriggerTime": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG_copy1",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_IT_FOREACH_DELETE_DELTA",
                                "dependencyConditions": [
                                    "Failed",
                                    "Skipped"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "@trim(concat(if(equals(string(activity('ACT_GEN_LKP_UNPROCESSED_FILES')?.error?.message),''), '', 'ACT_GEN_LKP_UNPROCESSED_FILES')))",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@trim(concat(activity('ACT_GEN_LKP_UNPROCESSED_FILES')?.error?.message))",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "MergeFrequency": {
                        "type": "string"
                    },
                    "RetentionPeriod": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "1500a049-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_CAPTURE_LOGS_ENRICH_DELTA",
            "name": "PL_DATA_CAPTURE_LOGS_ENRICH_DELTA",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_SPRC_CAPTURE_LOG",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_META_SOURCE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[LogExtract]",
                            "storedProcedureParameters": {
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ActvityID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaID": {
                                    "value": {
                                        "value": "@pipeline().parameters.DeltaID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ErrorFolderPath": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "Existval": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.Exists",
                                        "type": "Expression"
                                    },
                                    "type": "Boolean"
                                },
                                "IncrementalValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.IncrementValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().parameters.PipelineRunID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetColumnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceFileTable": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetFileTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceFolderPath": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.columnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetFileTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFileName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').output.value[0].TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.EnrichedZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "LowOffsetValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.OffsetValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ExtractionStartTime": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionStartTime",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                },
                                "ExtractionDurationInt": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionDuration",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_META_SOURCE",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT TargetColumnCount, TargetRecordCount, TargetFileTable,TargetFolderPath\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS]\nWHERE RequestID = @{pipeline().parameters.RequestID} \nand SourceZoneID =1 \nand TargetFileTable = @{concat('''',pipeline().parameters.SourceFileName,'''')} \nand ProcessingStatus = 'Success'\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_META_SOURCE",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT  TargetDeltaRecordCount,MergeFrequency\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM]\nWHERE RequestID = @{pipeline().parameters.RequestID}\nand RequestItemID = @{pipeline().parameters.RequestItemID}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_META_SOURCE",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_META_TARGET",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_TARGET_DATASET_PARQUET",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": "@pipeline().parameters.TargetFileName"
                                }
                            },
                            "fieldList": [
                                "exists",
                                "itemName",
                                "columnCount"
                            ],
                            "storeSettings": {
                                "type": "AzureDataLakeStoreReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "ACT_SP_COPY_COUNT",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[TargetCt]",
                            "storedProcedureParameters": {
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.columnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_SPRC_CAPTURE_LOG_MERGE",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[LogExtract_merge]",
                            "storedProcedureParameters": {
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ActvityID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaID": {
                                    "value": {
                                        "value": "@pipeline().parameters.DeltaID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().parameters.PipelineRunID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetColumnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceFileTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFileName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').output.value[0].TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetColumnCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "TargetFileTable": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetFolderPath": {
                                    "value": {
                                        "value": "@replace(pipeline().parameters.TargetFolderPath,'/DELTA','/MERGED')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "TargetSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.EnrichedZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "MergeStatus": {
                                    "value": "Unprocessed",
                                    "type": "String"
                                },
                                "MergeFrequency": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').output.value[0].MergeFrequency",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaLoadStatus": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "LoadProcessType": {
                                    "value": "Delta_Merge",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SUCCESS_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG_MERGE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "",
                                "Message": {
                                    "value": "@concat('EnrichLoad : ',pipeline().parameters.SourceFileName)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Delta",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "SUCCESS",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "SUCCESS",
                                "Pipeline_TriggerTime": "pipeline().TriggerTime"
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_META_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Meta Target",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_META_TARGET').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SP_CPY_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-SP copy cnt",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_SP_COPY_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_TARGET_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-LKP Target Count",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_META_SOURCE_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_META_SOURCE",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-LKP Meta Source",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_META_SOURCE').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG_ERROR",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG_MERGE",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Capture Log",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_SPRC_CAPTURE_LOG').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "ActvityID": {
                        "type": "string"
                    },
                    "PipelineRunID": {
                        "type": "string"
                    },
                    "TargetFileName": {
                        "type": "string"
                    },
                    "IncrementValue": {
                        "type": "string"
                    },
                    "OffsetValue": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "ExtractionStartTime": {
                        "type": "string"
                    },
                    "ExtractionDuration": {
                        "type": "int"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "15009c49-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_ENRICH_MERGE",
            "name": "PL_DATA_ENRICH_MERGE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_REQUEST_ITEMS",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n       Distinct [RequestID],[RequestItemID]\n  FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS_MERGE]\n  where [MergeFrequency]='@{pipeline().parameters.MergeFrequency}'\n  AND [DeltaLoadStatus]='Success' \n  AND ([MergeStatus]='UnProcessed' OR [MergeStatus]='InProgress')\n  AND [IsDeltaDeleted]='N';",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_IT_FOREACH_UNPR_FILES",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_REQUEST_ITEMS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_REQUEST_ITEMS').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "ACT_GEN_LKP_UNPROCESSED_FILE_NAMES",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_SP_MERGE_STATUS_UPDATE",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "select  SourceFiletable AS FileNames from \n[DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS_MERGE] \nwhere [RequestID]=@{item().RequestID}\n  AND [RequestItemID]=@{item().RequestItemID}\n  AND [DeltaLoadStatus]='Success' \n  AND [MergeStatus]='InProgress' \n  AND [IsDeltaDeleted]='N'\n  AND [MergeFrequency]='@{pipeline().parameters.MergeFrequency}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "ACT_GEN_LKP_UNPROCESSED_FILES_DETAILS",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n      [RequestItemID]\n      ,[RequestID]\n      ,[TargetZoneID]\n      ,[TargetFolderPath]\n      ,[SourceColumnCount]\n      ,[SourceFolderPath]\n      ,[MergeFrequency]\n      ,[IsDeltaDeleted]\n  FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS_MERGE]\n  where [RequestID]=@{item().RequestID}\n  AND [RequestItemID]=@{item().RequestItemID}\n  AND [DeltaLoadStatus]='Success' \n  AND ([MergeStatus]='UnProcessed' OR [MergeStatus]='InProgress' )\n  AND [IsDeltaDeleted]='N'\n  AND [MergeFrequency]='@{pipeline().parameters.MergeFrequency}'\n  GROUP BY [RequestItemID]\n      ,[RequestID]\n      ,[TargetZoneID]\n      ,[TargetFolderPath]\n      ,[SourceColumnCount]\n      ,[SourceFolderPath]\n      ,[MergeStatus]\n      ,[MergeFrequency]\n      ,[IsDeltaDeleted]",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "ACT_DB_ENRICH_MERGE",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_LKP_MERGE_PART_DETAILS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "ACT_GEN_LKP_UNPROCESSED_FILE_NAMES",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/DIF/CIF_Enrich_Delta_Merge",
                                        "baseParameters": {
                                            "FileNames": {
                                                "value": "@join(activity('ACT_GEN_LKP_UNPROCESSED_FILE_NAMES').output.value,',')",
                                                "type": "Expression"
                                            },
                                            "Files_count": {
                                                "value": "@string(activity('ACT_GEN_LKP_UNPROCESSED_FILE_NAMES').output.count)",
                                                "type": "Expression"
                                            },
                                            "EnrUnHarmonisedFolder": {
                                                "value": "@activity('ACT_GEN_LKP_UNPROCESSED_FILES_DETAILS').output.firstRow.TargetFolderPath",
                                                "type": "Expression"
                                            },
                                            "ADF_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "Deltapath": {
                                                "value": "@activity('ACT_GEN_LKP_UNPROCESSED_FILES_DETAILS').output.firstRow.SourceFolderPath",
                                                "type": "Expression"
                                            },
                                            "objectname": {
                                                "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.ObjectName",
                                                "type": "Expression"
                                            },
                                            "KEY_NAME": {
                                                "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.SourceMetaDataInfo",
                                                "type": "Expression"
                                            },
                                            "Orderbyfield": {
                                                "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.MergeOrderBy",
                                                "type": "Expression"
                                            },
                                            "PartitionType": {
                                                "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.PartitionType",
                                                "type": "Expression"
                                            },
                                            "ItemName": {
                                                "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.ItemName",
                                                "type": "Expression"
                                            },
                                            "NoOfPartitions": {
                                                "value": "@string(activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.NoOfPartitions)",
                                                "type": "Expression"
                                            },
                                            "ItemDataType": {
                                                "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.ItemDataType",
                                                "type": "Expression"
                                            },
                                            "DataTypeFormat": {
                                                "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.DataTypeFormat",
                                                "type": "Expression"
                                            },
                                            "PartitionHierarchy": {
                                                "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.PartitionHierarchy",
                                                "type": "Expression"
                                            },
                                            "Env_Path": {
                                                "value": "@pipeline().globalParameters.ADLS_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS_Databricks_CIF",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "DatabricksURL": {
                                                "value": "@pipeline().globalParameters.DatabricksURL",
                                                "type": "Expression"
                                            },
                                            "DatabricksResource": {
                                                "value": "@pipeline().globalParameters.DatabricksResourceID",
                                                "type": "Expression"
                                            },
                                            "ClusterID": {
                                                "value": "@pipeline().globalParameters.ClusterID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "ACT_GEN_LKP_MERGE_PART_DETAILS",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "select TargetObjectName AS ObjectName,SourceMetadataInfo,MergeOrderBy,\nCOALESCE(PartitionType,'NA') AS PartitionType,\nCOALESCE(ItemName,'NA') AS ItemName,\nCOALESCE(NoOfPartitions,0) AS NoOfPartitions,\nCOALESCE(ItemDataType,'NA') AS ItemDataType,\nCOALESCE(DataTypeFormat,'NA') AS DataTypeFormat,\nCOALESCE(PartitionHierarchy,'NA') AS PartitionHierarchy\nfrom [DATACATALOGUE].[TB_REQUEST_ITEM] REQ\nLEFT OUTER JOIN [DATACATALOGUE].[TB_PARTITION] PAR_HDR\nON REQ.RequestItemID=PAR_HDR.RequestItemID\nAND REQ.RequestID=PAR_HDR.RequestID\nLEFT OUTER JOIN [DATACATALOGUE].[TB_PARTITION_ITEM] PAR_ITM\nON PAR_HDR.PartitionID=PAR_ITM.PartitionID\nWhere REQ.RequestID=@{item().RequestID} AND \nREQ.RequestItemID = @{item().RequestItemID}",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "ACT_GEN_SP_MERGE_STATUS_UPDATE",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_LKP_UNPROCESSED_FILES_DETAILS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[DATACATALOGUE].[LogExtract_merge]",
                                        "storedProcedureParameters": {
                                            "ActvityID": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "DeltaID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "DeltaLoadStatus": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadProcessType": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "MergeFrequency": {
                                                "value": {
                                                    "value": "@pipeline().parameters.MergeFrequency",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "MergeStatus": {
                                                "value": "InProgress",
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "RequestID": {
                                                "value": {
                                                    "value": "@item().RequestID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "RequestItemID": {
                                                "value": {
                                                    "value": "@item().RequestItemID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "RequestRunDateTime": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SourceColumnCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceFileTable": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "SourceFolderPath": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "SourceRecordCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceSchemaName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "SourceZoneID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetColumnCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetFileTable": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "TargetFolderPath": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "TargetRecordCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetSchemaName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "TargetZoneID": {
                                                "value": null,
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS_ASQL_CONFIG_DATABASE",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "ACT_GEN_SPRC_MERGE_SUCCESS_UPD",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_DB_ENRICH_MERGE",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[DATACATALOGUE].[LogExtract_merge]",
                                        "storedProcedureParameters": {
                                            "ActvityID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DeltaID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "RequestID": {
                                                "value": {
                                                    "value": "@item().RequestID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "RequestItemID": {
                                                "value": {
                                                    "value": "@item().RequestItemID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "RequestRunDateTime": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "SourceColumnCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceFileTable": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "SourceFolderPath": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "SourceRecordCount": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "SourceSchemaName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "SourceZoneID": {
                                                "value": null,
                                                "type": "Int32"
                                            },
                                            "TargetColumnCount": {
                                                "value": {
                                                    "value": "@string(activity('ACT_GEN_LKP_UNPROCESSED_FILES_DETAILS').output.firstRow.SourceColumnCount)",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "TargetFileTable": {
                                                "value": {
                                                    "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.ObjectName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "TargetFolderPath": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "TargetRecordCount": {
                                                "value": {
                                                    "value": "@string(activity('ACT_DB_ENRICH_MERGE').output.runOutput)",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "TargetSchemaName": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "TargetZoneID": {
                                                "value": {
                                                    "value": "@pipeline().globalParameters.EnrichedZoneID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "MergeStatus": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "MergeFrequency": {
                                                "value": {
                                                    "value": "@pipeline().parameters.MergeFrequency",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "DeltaLoadStatus": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "LoadProcessType": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS_ASQL_CONFIG_DATABASE",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "ACT_GEN_EXEC_SUCCESS_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_SPRC_MERGE_SUCCESS_UPD",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": "",
                                            "Message": {
                                                "value": "@concat('EnrichDeltaMerge : ',pipeline().parameters.MergeFrequency)",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "LoadProcessType": "Delta_Merge",
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "SUCCESS",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "SUCCESS",
                                            "Pipeline_TriggerTime": "pipeline().TriggerTime"
                                        }
                                    }
                                },
                                {
                                    "name": "ACT_GEN_EXEC_LKP_FILES_ERROR_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_LKP_UNPROCESSED_FILES_DETAILS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": {
                                                "value": "Enrich Delta Merge -Lookup unprocessed files",
                                                "type": "Expression"
                                            },
                                            "Message": {
                                                "value": "@concat('EnrichDeltaMerge - Failure : ',activity('ACT_GEN_LKP_UNPROCESSED_FILES_DETAILS').error.message)",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "Load_Frequency": {
                                                "value": "@pipeline().parameters.MergeFrequency",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "LoadProcessType": "Enrich Load",
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "Failure",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "ERROR",
                                            "Pipeline_TriggerTime": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "ACT_GEN_EXEC_MERGE_UPD_ERROR_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_SP_MERGE_STATUS_UPDATE",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": {
                                                "value": "Enrich Delta Merge -Update Merge Status",
                                                "type": "Expression"
                                            },
                                            "Message": {
                                                "value": "@concat('EnrichDeltaMerge - Failure : ',activity('ACT_GEN_SP_MERGE_STATUS_UPDATE').error.message)",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "Load_Frequency": {
                                                "value": "@pipeline().parameters.MergeFrequency",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "LoadProcessType": "Enrich Load",
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "Failure",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "ERROR",
                                            "Pipeline_TriggerTime": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "ACT_GEN_EXEC_LKP_PARTITION__DETAILS_ERROR_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_LKP_MERGE_PART_DETAILS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": {
                                                "value": "Enrich Delta Merge -LKP Merge partition details",
                                                "type": "Expression"
                                            },
                                            "Message": {
                                                "value": "@concat('EnrichDeltaMerge - Failure : ',activity('ACT_GEN_LKP_MERGE_PART_DETAILS').error.message)",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "Load_Frequency": {
                                                "value": "@pipeline().parameters.MergeFrequency",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "LoadProcessType": "Enrich Load",
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "Failure",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "ERROR",
                                            "Pipeline_TriggerTime": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "ACT_GEN_EXEC_LKP_UNPROCESSED_FILE_ERROR_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_LKP_UNPROCESSED_FILE_NAMES",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": {
                                                "value": "Enrich Delta Merge -LKP Unmerged files",
                                                "type": "Expression"
                                            },
                                            "Message": {
                                                "value": "@concat('EnrichDeltaMerge - Failure : ',activity('ACT_GEN_LKP_UNPROCESSED_FILE_NAMES').error.message)",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "Load_Frequency": {
                                                "value": "@pipeline().parameters.MergeFrequency",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "LoadProcessType": "Enrich Load",
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "Failure",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "ERROR",
                                            "Pipeline_TriggerTime": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "ACT_GEN_EXEC_MERGE_ADB_ERROR_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_DB_ENRICH_MERGE",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": {
                                                "value": "Enrich Delta Merge -Merge Databricks notebook",
                                                "type": "Expression"
                                            },
                                            "Message": {
                                                "value": "@concat('EnrichDeltaMerge - Failure : ',activity('ACT_DB_ENRICH_MERGE').error.message)",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "Load_Frequency": {
                                                "value": "@pipeline().parameters.MergeFrequency",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "LoadProcessType": "Enrich Load",
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "Failure",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "ERROR",
                                            "Pipeline_TriggerTime": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "ACT_GEN_EXEC_MERGE_SUCCESS_UPD_ERROR_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_SPRC_MERGE_SUCCESS_UPD",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": {
                                                "value": "Enrich Delta Merge -Update Merge status",
                                                "type": "Expression"
                                            },
                                            "Message": {
                                                "value": "@concat('EnrichDeltaMerge - Failure : ',activity('ACT_GEN_SPRC_MERGE_SUCCESS_UPD').error.message)",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "Load_Frequency": {
                                                "value": "@pipeline().parameters.MergeFrequency",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "LoadProcessType": "Enrich Load",
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "Failure",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "ERROR",
                                            "Pipeline_TriggerTime": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_REQUEST_ITEMS",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Lookup Read Merge Log",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_REQUEST_ITEMS').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.MergeFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "MergeFrequency": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "1500ad49-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_CAPTURE_LOGS_ENRICH_DELTA_MERGE",
            "name": "PL_DATA_CAPTURE_LOGS_ENRICH_DELTA_MERGE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_SPRC_CAPTURE_LOG",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_META_SOURCE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[LogExtract]",
                            "storedProcedureParameters": {
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ActvityID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaID": {
                                    "value": {
                                        "value": "@pipeline().parameters.DeltaID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ErrorFolderPath": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "Existval": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.Exists",
                                        "type": "Expression"
                                    },
                                    "type": "Boolean"
                                },
                                "IncrementalValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.IncrementValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().parameters.PipelineRunID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetColumnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceFileTable": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetFileTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceFolderPath": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_TARGET_COLUMN_COUNT').output.firstRow.columnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetFileTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFileName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').output.value[0].TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.EnrichedZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "LowOffsetValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.OffsetValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ExtractionStartTime": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionStartTime",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                },
                                "ExtractionDurationInt": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionDuration",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_META_SOURCE",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT TargetColumnCount, TargetRecordCount, TargetFileTable,TargetFolderPath\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS]\nWHERE RequestID = @{pipeline().parameters.RequestID} \nand SourceZoneID =1 \nand TargetFileTable = @{concat('''',pipeline().parameters.SourceFileName,'''')} \nand ProcessingStatus = 'Success'\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_META_SOURCE",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT  TargetDeltaRecordCount\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM]\nWHERE RequestID = @{pipeline().parameters.RequestID}\nand RequestItemID = @{pipeline().parameters.RequestItemID}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_META_SOURCE",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_SP_COPY_COUNT",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_TARGET_COLUMN_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[TargetCt]",
                            "storedProcedureParameters": {
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_TARGET_COLUMN_COUNT').output.firstRow.columnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_META_TARGET",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_TARGET_PARQUET_FOLDER",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Folder": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists",
                                "itemName"
                            ],
                            "storeSettings": {
                                "type": "AzureDataLakeStoreReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_TARGET_COLUMN_COUNT",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select RequestItemID,count(*) AS columnCount \nfrom [DATACATALOGUE].[VW_MAPPING] where RequestItemID=@{pipeline().parameters.RequestItemID}\ngroup by RequestItemID",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_META_SOURCE",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SUCCESS_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "",
                                "Message": {
                                    "value": "@concat('EnrichLoad : ',pipeline().parameters.SourceFileName)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Delta_Merge",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "SUCCESS",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "SUCCESS",
                                "Pipeline_TriggerTime": "pipeline().TriggerTime"
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_META_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Meta Target",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_META_TARGET').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta_Merge",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SP_CPY_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-SP copy cnt",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_SP_COPY_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta_Merge",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_TARGET_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_TARGET_COLUMN_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-LKP Target Count",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_TARGET_COLUMN_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta_Merge",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_META_SOURCE_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_META_SOURCE",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-LKP Meta Source",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_META_SOURCE').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta_Merge",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG_ERROR",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Capture Log",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_SPRC_CAPTURE_LOG').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta_Merge",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_TARGET_ROWCNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Meta Target",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_META_TARGET').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Delta_Merge",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "ActvityID": {
                        "type": "string"
                    },
                    "PipelineRunID": {
                        "type": "string"
                    },
                    "TargetFileName": {
                        "type": "string"
                    },
                    "IncrementValue": {
                        "type": "string"
                    },
                    "OffsetValue": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "ExtractionStartTime": {
                        "type": "string"
                    },
                    "ExtractionDuration": {
                        "type": "int"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500b349-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_COPY_FILES_ENRICH_DELTA_MERGE",
            "name": "PL_DATA_COPY_FILES_ENRICH_DELTA_MERGE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_MT_COPY_INGEST_ACQUISITION",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_MAPPING",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "value": "@json(activity('ACT_GEN_LKP_FETCH_MAPPING').output.firstRow.json_output)",
                                "type": "Expression"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_PARQUET_ACQ",
                                "type": "DatasetReference",
                                "parameters": {
                                    "File": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ADLS_TARGET_FILE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@concat(pipeline().parameters.SourceFolderPath,'/temp/')",
                                        "type": "Expression"
                                    },
                                    "FileName": "@pipeline().parameters.SourceFileName"
                                }
                            }
                        ]
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_ADB_MERGE_ENR",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_CAPTURE_LOGS_ENRICH_DELTA_MERGE",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": false,
                            "parameters": {
                                "TargetFolderPath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "DeltaID": {
                                    "value": "@pipeline().parameters.DeltaID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "ActvityID": {
                                    "value": "@pipeline().TriggerId",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "TargetFileName": {
                                    "value": "@concat(pipeline().parameters.TargetObjectName,'.parquet')",
                                    "type": "Expression"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.rowsCopied",
                                    "type": "Expression"
                                },
                                "SourceFileName": {
                                    "value": "@pipeline().parameters.SourceFileName",
                                    "type": "Expression"
                                },
                                "ExtractionStartTime": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.executionDetails[0].start",
                                    "type": "Expression"
                                },
                                "ExtractionDuration": {
                                    "value": "@add(activity('ACT_MT_COPY_INGEST_ACQUISITION').output.copyDuration,activity('ACT_ADB_MERGE_ENR').output.executionDuration)",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_MAPPING",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[DATACATALOGUE].[SP_ColumnMapping]",
                                "storedProcedureParameters": {
                                    "RequestID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestID",
                                            "type": "Expression"
                                        }
                                    },
                                    "RequestItemID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestItemID",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_DELTA_FETCH",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "ACT_ADB_MERGE_ENR",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_DELTA_KEYS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/DIF/CIF_Enrich",
                            "baseParameters": {
                                "Enrpath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "objectname": {
                                    "value": "@pipeline().parameters.TargetObjectName",
                                    "type": "Expression"
                                },
                                "query": {
                                    "value": "@activity('ACT_GEN_LKP_FETCH_DELTA_KEYS').output.value[0].SourceMetadataInfo",
                                    "type": "Expression"
                                },
                                "ADF_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "SourceFileName": {
                                    "value": "@pipeline().parameters.SourceFileName",
                                    "type": "Expression"
                                },
                                "Orderbyfield": {
                                    "value": "@activity('ACT_GEN_LKP_FETCH_DELTA_KEYS').output.value[0].MergeOrderBy",
                                    "type": "Expression"
                                },
                                "PartitionType": {
                                    "value": "@activity('ACT_GEN_LKP_FETCH_DELTA_KEYS').output.value[0].PartitionType",
                                    "type": "Expression"
                                },
                                "ItemName": {
                                    "value": "@activity('ACT_GEN_LKP_FETCH_DELTA_KEYS').output.value[0].ItemName",
                                    "type": "Expression"
                                },
                                "NoOfPartitions": {
                                    "value": "@string(activity('ACT_GEN_LKP_FETCH_DELTA_KEYS').output.value[0].NoOfPartitions)",
                                    "type": "Expression"
                                },
                                "ItemDataType": {
                                    "value": "@activity('ACT_GEN_LKP_FETCH_DELTA_KEYS').output.value[0].ItemDataType",
                                    "type": "Expression"
                                },
                                "DataTypeFormat": {
                                    "value": "@activity('ACT_GEN_LKP_FETCH_DELTA_KEYS').output.value[0].DataTypeFormat",
                                    "type": "Expression"
                                },
                                "PartitionHierarchy": {
                                    "value": "@activity('ACT_GEN_LKP_FETCH_DELTA_KEYS').output.value[0].PartitionHierarchy",
                                    "type": "Expression"
                                },
                                "DeltaPath": {
                                    "value": "@concat(pipeline().parameters.SourceFolderPath,'/temp/')",
                                    "type": "Expression"
                                },
                                "Env_Path": {
                                    "value": "@pipeline().globalParameters.ADLS_URL",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_Databricks_CIF",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "DatabricksURL": {
                                    "value": "@pipeline().globalParameters.DatabricksURL",
                                    "type": "Expression"
                                },
                                "DatabricksResource": {
                                    "value": "@pipeline().globalParameters.DatabricksResourceID",
                                    "type": "Expression"
                                },
                                "ClusterID": {
                                    "value": "@pipeline().globalParameters.ClusterID",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_DELTA_KEYS",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select SourceMetadataInfo,MergeOrderBy,\nCOALESCE(PartitionType,'NA') AS PartitionType,\nCOALESCE(ItemName,'NA') AS ItemName,\nCOALESCE(NoOfPartitions,0) AS NoOfPartitions,\nCOALESCE(ItemDataType,'NA') AS ItemDataType,\nCOALESCE(DataTypeFormat,'NA') AS DataTypeFormat,\nCOALESCE(PartitionHierarchy,'NA') AS PartitionHierarchy\nfrom [DATACATALOGUE].[TB_REQUEST_ITEM] REQ\nLEFT OUTER JOIN [DATACATALOGUE].[TB_PARTITION] PAR_HDR\nON REQ.RequestItemID=PAR_HDR.RequestItemID\nAND REQ.RequestID=PAR_HDR.RequestID\nLEFT OUTER JOIN [DATACATALOGUE].[TB_PARTITION_ITEM] PAR_ITM\nON PAR_HDR.PartitionID=PAR_ITM.PartitionID\nWhere REQ.RequestItemID = @{pipeline().parameters.RequestItemID}\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_DELTA_FETCH",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_DB_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_ADB_MERGE_ENR",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Delta Merge NoteBook",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_ADB_MERGE_ENR').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_KEYS_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_DELTA_KEYS",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Lookup Merge Keys",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_DELTA_KEYS').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_TEMP_CPY_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Copy Acq to enrich-temp",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_MT_COPY_INGEST_ACQUISITION').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_MAPPING_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_MAPPING",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Mapping Lookup",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_MAPPING').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    },
                    "TargetObjectName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:09Z"
            },
            "etag": "1500e449-0000-0c00-0000-632aa7010000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_CIF_LOG",
            "name": "PL_CIF_LOG",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_SP_LOG",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[Log_activity]",
                            "storedProcedureParameters": {
                                "ActivityName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ActivityName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ActvityID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DataFactory_Name": {
                                    "value": {
                                        "value": "@pipeline().parameters.DataFactory_Name",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "INFO_TYPE": {
                                    "value": {
                                        "value": "@pipeline().parameters.INFO_TYPE",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Load_Frequency": {
                                    "value": {
                                        "value": "@pipeline().parameters.Load_Frequency",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "LoadProcessType": {
                                    "value": {
                                        "value": "@pipeline().parameters.LoadProcessType",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Message": {
                                    "value": {
                                        "value": "@pipeline().parameters.Message",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ObjectName": {
                                    "value": {
                                        "value": "@pipeline().parameters.ObjectName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "PipelineName": {
                                    "value": {
                                        "value": "@pipeline().parameters.PipelineName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Pipeline_TriggerName": {
                                    "value": {
                                        "value": "@pipeline().parameters.Pipeline_TriggerName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Pipeline_TriggerTime": {
                                    "value": {
                                        "value": "@pipeline().parameters.Pipeline_TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Pipeline_TriggerType": {
                                    "value": {
                                        "value": "@pipeline().parameters.Pipeline_TriggerType",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().parameters.PipelineRunID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ProcessingStatus": {
                                    "value": {
                                        "value": "@pipeline().parameters.ProcessingStatus",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestRunDateTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceName": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "SourceName": {
                        "type": "string",
                        "defaultValue": null
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "RequestItemID": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "string"
                    },
                    "PipelineName": {
                        "type": "string"
                    },
                    "ActivityName": {
                        "type": "string",
                        "defaultValue": null
                    },
                    "Message": {
                        "type": "string"
                    },
                    "DataFactory_Name": {
                        "type": "string"
                    },
                    "PipelineRunID": {
                        "type": "string"
                    },
                    "ActvityID": {
                        "type": "string",
                        "defaultValue": null
                    },
                    "Pipeline_TriggerName": {
                        "type": "string"
                    },
                    "Pipeline_TriggerType": {
                        "type": "string"
                    },
                    "Load_Frequency": {
                        "type": "string"
                    },
                    "RequestRunDateTime": {
                        "type": "string"
                    },
                    "LoadProcessType": {
                        "type": "string"
                    },
                    "TargetZoneID": {
                        "type": "string"
                    },
                    "ProcessingStatus": {
                        "type": "string",
                        "defaultValue": null
                    },
                    "SourceZoneID": {
                        "type": "string"
                    },
                    "INFO_TYPE": {
                        "type": "string"
                    },
                    "Pipeline_TriggerTime": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "General"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:02Z"
            },
            "etag": "15007749-0000-0c00-0000-632aa6fa0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_CAPTURE_LOGS_ENRICH_DELTALAKE",
            "name": "PL_DATA_CAPTURE_LOGS_ENRICH_DELTALAKE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_SPRC_CAPTURE_LOG",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_META_SOURCE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[LogExtract]",
                            "storedProcedureParameters": {
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ActvityID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaID": {
                                    "value": {
                                        "value": "@pipeline().parameters.DeltaID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ErrorFolderPath": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "Existval": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetMetaExistVal",
                                        "type": "Expression"
                                    },
                                    "type": "Boolean"
                                },
                                "IncrementalValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.IncrementValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().parameters.PipelineRunID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceColumnCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetColumnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceFileTable": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetFileTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceFolderPath": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetFileTable",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_META_SOURCE').output.value[0].TargetRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetColumnCount": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFileColumnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetFileTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.ObjectName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').output.value[0].TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.EnrichedZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "LowOffsetValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.OffsetValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ExtractionStartTime": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionStartTime",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                },
                                "ExtractionDurationInt": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionDuration",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_META_SOURCE",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT TargetColumnCount, TargetRecordCount, TargetFileTable\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS]\nWHERE RequestID = @{pipeline().parameters.RequestID} \nand SourceZoneID =1 \nand TargetFileTable = @{concat('''',pipeline().parameters.SourceFileName,'''')} \nand ProcessingStatus = 'Success'\n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_META_SOURCE",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT  TargetDeltaRecordCount\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM]\nWHERE RequestID = @{pipeline().parameters.RequestID}\nand RequestItemID = @{pipeline().parameters.RequestItemID}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_META_SOURCE",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_SP_COPY_COUNT",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[TargetCt]",
                            "storedProcedureParameters": {
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaColumnCount": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFileColumnCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SUCCESS_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "",
                                "Message": {
                                    "value": "@concat('EnrichLoad : ',pipeline().parameters.SourceFileName)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Initial",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "SUCCESS",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "SUCCESS",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SP_CPY_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_SP_COPY_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-SP copy cnt",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_SP_COPY_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Initial",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_TARGET_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-LKP Target Count",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Initial",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_META_SOURCE_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_META_SOURCE",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-LKP Meta Source",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_META_SOURCE').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Initial",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG_ERROR",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Capture Log",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad - Failure : ',activity('ACT_GEN_SPRC_CAPTURE_LOG').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "Initial",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "ActvityID": {
                        "type": "string"
                    },
                    "PipelineRunID": {
                        "type": "string"
                    },
                    "TargetFileName": {
                        "type": "string"
                    },
                    "IncrementValue": {
                        "type": "string"
                    },
                    "OffsetValue": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "TargetFileColumnCount": {
                        "type": "string"
                    },
                    "TargetMetaExistVal": {
                        "type": "bool"
                    },
                    "TargetMetaItemName": {
                        "type": "string"
                    },
                    "ExtractionStartTime": {
                        "type": "string"
                    },
                    "ExtractionDuration": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/DeltaLake"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "15009a49-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_COPY_FILES_ENRICH_DELTALAKE",
            "name": "PL_DATA_COPY_FILES_ENRICH_DELTALAKE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_FETCH_MAPPING",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:03:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[DATACATALOGUE].[SP_ColumnMapping]",
                                "storedProcedureParameters": {
                                    "RequestID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestID",
                                            "type": "Expression"
                                        }
                                    },
                                    "RequestItemID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestItemID",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_DELTA_FETCH",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "ACT_MT_COPY_INGEST_ACQUISITION",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_MAPPING",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "value": "@json(activity('ACT_GEN_LKP_FETCH_MAPPING').output.firstRow.json_output)",
                                "type": "Expression"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_PARQUET_ACQ",
                                "type": "DatasetReference",
                                "parameters": {
                                    "File": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ADLS_TARGET_FILE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@concat(pipeline().parameters.SourceFolderPath,'/temp/')",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_CAPTURE_LOGS_ENRICH_DELTALAKE",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TargetFolderPath": {
                                    "value": "@replace(pipeline().parameters.TargetFolderPath,'/DELTA/','/MERGED/')",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.TargetObjectName",
                                    "type": "Expression"
                                },
                                "DeltaID": {
                                    "value": "@pipeline().parameters.DeltaID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "ActvityID": {
                                    "value": "@pipeline().TriggerId",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().parameters.PipelineRunID",
                                    "type": "Expression"
                                },
                                "TargetFileName": {
                                    "value": "@{concat(pipeline().parameters.ObjectName,'.parquet')}",
                                    "type": "Expression"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.rowsCopied",
                                    "type": "Expression"
                                },
                                "SourceFileName": {
                                    "value": "@pipeline().parameters.SourceFileName",
                                    "type": "Expression"
                                },
                                "TargetFileColumnCount": {
                                    "value": "@activity('ACT_GEN_META_TARGET').output.columnCount",
                                    "type": "Expression"
                                },
                                "TargetMetaExistVal": {
                                    "value": "@activity('ACT_GEN_META_TARGET').output.Exists",
                                    "type": "Expression"
                                },
                                "TargetMetaItemName": {
                                    "value": "@activity('ACT_GEN_META_TARGET').output.itemName",
                                    "type": "Expression"
                                },
                                "ExtractionStartTime": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.executionDetails[0].start",
                                    "type": "Expression"
                                },
                                "ExtractionDuration": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.copyDuration",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_META_TARGET",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:04:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_TARGET_DATASET_PARQUET",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@concat(pipeline().parameters.SourceFolderPath,'/temp/')",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists",
                                "itemName",
                                "columnCount"
                            ],
                            "storeSettings": {
                                "type": "AzureDataLakeStoreReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_MAPPING_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_MAPPING",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load DeltaLake -Lkp Mapping",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_LKP_FETCH_MAPPING').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_CPY_ENRICH_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load DeltaLake-Acq Enrich Delta Copy",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_MT_COPY_INGEST_ACQUISITION').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_META_TARGET_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load DeltaLake-get Enrich file metadata",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_META_TARGET').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": {
                                    "value": "@concat('Enrich Load : ',pipeline().parameters.LoadStatus)",
                                    "type": "Expression"
                                },
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    },
                    "TargetObjectName": {
                        "type": "string"
                    },
                    "PipelineRunID": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Acq to Enrich"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500be49-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH_DELTALAKE",
            "name": "PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH_DELTALAKE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipeline is responsible for Processing all the Extract Request Items",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:03:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "WITH AquisitionLogs AS \n(SELECT L.TargetFileTable,L.RequestID,\nL.RequestItemID, L.LoadProcessType,\nL.SourceFileTable,L.RequestRunDateTime \nFROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] L\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R ON R.RequestID=L.RequestID\nWHERE L.TargetZoneID=@{pipeline().globalParameters.AcquisitionZoneID}\nAND R.TargetZoneID= @{pipeline().globalParameters.EnrichedZoneID}\nAND R.TargetObjectName='@{pipeline().parameters.TargetObjectName}'\nAND R.LoadFrequency='@{pipeline().parameters.LoadFrequency}' \nAND L.LoadProcessType='@{pipeline().parameters.LoadStatus}'\nAND L.ProcessingStatus ='Success'),\nEnrichedLogs AS\n(SELECT L.TargetFileTable,L.RequestID,\nL.RequestItemID, L.LoadProcessType,\nL.SourceFileTable,L.RequestRunDateTime \nFROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] L\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R ON R.RequestID=L.RequestID\nWHERE L.TargetZoneID=@{pipeline().globalParameters.EnrichedZoneID}\nAND R.TargetZoneID= @{pipeline().globalParameters.EnrichedZoneID}\nAND R.TargetObjectName='@{pipeline().parameters.TargetObjectName}'\nAND R.LoadFrequency='@{pipeline().parameters.LoadFrequency}' \nAND L.LoadProcessType='@{pipeline().parameters.LoadStatus}'\nAND L.ProcessingStatus ='Success')\nSELECT A.LoadProcessType\n                 LoadStatus, \n\t\tR.RequestID ,\n\t\tR.RequestItemID,\n\t\tR.ObjectName\t\t ,\n                R.TargetObjectName\t\t ,\n\t\tR.TargetFolderPath\t\t ,\n\t\tR.TargetFileTable\t\t\t ,\n\t\tR.SourceFolderPath\t\t ,\n\t\tR.SourceFileTable\t\t\t ,\n\t\tA.TargetFileTable AS SourceDeltaFileTable,\n\t\tR.DeltaExpressionID\t\t ,\n\t\tR.SourceZoneID   ,\n\t\tR.TargetZoneID\nFROM AquisitionLogs A LEFT OUTER JOIN \nEnrichedLogs E ON (A.RequestID=E.RequestID AND A.TargetFileTable=E.SourceFileTable)\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R ON\nR.RequestID=A.RequestID\nWHERE E.RequestID IS NULL \nAND R.TargetObjectName='@{pipeline().parameters.TargetObjectName}'\nAND R.LoadFrequency='@{pipeline().parameters.LoadFrequency}' \nand R.LoadStatus = '@{pipeline().parameters.LoadStatus}'\nand cast(R.LoadStartDate as date)  <=  @{concat('''',formatDateTime(utcnow(),'yyyy-MM-dd'),'''')}\nand R.LoadFrequency  =  '@{pipeline().parameters.LoadFrequency}'\nand R.ApprovalStatus = 'Approved'\nand R.TargetZoneID\t= @{pipeline().globalParameters.EnrichedZoneID}\nand R.ProcessingStatus = 'Active'\nOrder By A.RequestID,A.RequestRunDateTime,A.TargetFileTable",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_LKP_READ_DELTA_INCREMENT",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "ACT_GEN_LKP_READ_DELTA_COUNT",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(greater(activity('ACT_GEN_LKP_READ_DELTA_COUNT').output.value[0].DeltaCount,0), greater(activity('ACT_GEN_LKP_READ_DELTA_INCREMENT').output.value[0].IncrementValue,0))",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Execute Pipeline1",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "PL_DATA_COPY_FILES_ENRICH",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "TargetFolderPath": {
                                                            "value": "@item().TargetFolderPath",
                                                            "type": "Expression"
                                                        },
                                                        "ObjectName": {
                                                            "value": "@item().ObjectName",
                                                            "type": "Expression"
                                                        },
                                                        "DeltaID": {
                                                            "value": "@item().DeltaExpressionID",
                                                            "type": "Expression"
                                                        },
                                                        "RequestItemID": {
                                                            "value": "@item().RequestItemID",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFolderPath": {
                                                            "value": "@item().SourceFolderPath",
                                                            "type": "Expression"
                                                        },
                                                        "RequestID": {
                                                            "value": "@item().RequestID",
                                                            "type": "Expression"
                                                        },
                                                        "FileName": {
                                                            "value": "@item().SourceDeltaFileTable",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFileName": {
                                                            "value": "@item().SourceDeltaFileTable",
                                                            "type": "Expression"
                                                        },
                                                        "LoadStatus": {
                                                            "value": "@item().LoadStatus",
                                                            "type": "Expression"
                                                        },
                                                        "TargetObjectName": {
                                                            "value": "@item().TargetObjectName",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "ACT_GEN_EXEC_PL_COPY_ENRICH_DELTALAKE",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "PL_DATA_COPY_FILES_ENRICH_DELTALAKE",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "TargetFolderPath": {
                                                            "value": "@item().TargetFolderPath",
                                                            "type": "Expression"
                                                        },
                                                        "ObjectName": {
                                                            "value": "@item().ObjectName",
                                                            "type": "Expression"
                                                        },
                                                        "DeltaID": {
                                                            "value": "@item().DeltaExpressionID",
                                                            "type": "Expression"
                                                        },
                                                        "RequestItemID": {
                                                            "value": "@item().RequestItemID",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFolderPath": {
                                                            "value": "@item().SourceFolderPath",
                                                            "type": "Expression"
                                                        },
                                                        "RequestID": {
                                                            "value": "@item().RequestID",
                                                            "type": "Expression"
                                                        },
                                                        "FileName": {
                                                            "value": "@item().SourceDeltaFileTable",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFileName": {
                                                            "value": "@item().SourceDeltaFileTable",
                                                            "type": "Expression"
                                                        },
                                                        "LoadStatus": {
                                                            "value": "@item().LoadStatus",
                                                            "type": "Expression"
                                                        },
                                                        "TargetObjectName": {
                                                            "value": "@item().TargetObjectName",
                                                            "type": "Expression"
                                                        },
                                                        "PipelineRunID": {
                                                            "value": "@pipeline().RunId",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ACT_GEN_LKP_READ_DELTA_COUNT",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:03:00",
                                        "retry": 3,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT Count(1) [DeltaCount]  FROM [DATACATALOGUE].[TB_DELTA_ITEM] D\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R ON R.RequestItemID=D.DeltaID\nWHERE R.RequestID='@{item().RequestID}'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DS_SQL_DELTA_FETCH",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "ACT_GEN_LKP_READ_DELTA_INCREMENT",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:03:00",
                                        "retry": 3,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "Select CONVERT(int,IncrementValue) IncrementValue FROM [DATACATALOGUE].[TB_DELTA_ITEM] D\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R ON R.RequestItemID=D.DeltaID\nWHERE R.RequestID='@{item().RequestID}' AND ItemName IS NULL",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DS_SQL_DELTA_FETCH",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "ACT_GEN_LKP_READ_DELTA_COUNT_ERROR_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_LKP_READ_DELTA_COUNT",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "SourceName": {
                                                "value": "pipeline().parameters.SystemName",
                                                "type": "Expression"
                                            },
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": {
                                                "value": "Enrich Load DeltaLake-Lookup Read Request",
                                                "type": "Expression"
                                            },
                                            "Message": {
                                                "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_LKP_READ_DELTA_COUNT').error.message)",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "Load_Frequency": {
                                                "value": "@pipeline().parameters.LoadFrequency",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "LoadProcessType": "Enrich Load",
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "Failure",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "ERROR",
                                            "Pipeline_TriggerTime": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "ACT_GEN_LKP_READ_DELTA_INCREMENT_ERROR_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "ACT_GEN_LKP_READ_DELTA_INCREMENT",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "SourceName": {
                                                "value": "@pipeline().parameters.SystemName",
                                                "type": "Expression"
                                            },
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": {
                                                "value": "Enrich Load DeltaLake-Lookup Read Request",
                                                "type": "Expression"
                                            },
                                            "Message": {
                                                "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_LKP_READ_DELTA_INCREMENT').error.message)",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "Load_Frequency": {
                                                "value": "@pipeline().parameters.LoadFrequency",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "LoadProcessType": "Enrich Load",
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "Failure",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "ERROR",
                                            "Pipeline_TriggerTime": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceName": {
                                    "value": "@pipeline().parameters.SystemName",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.TargetObjectName",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load DeltaLake-Lookup Read Item Request",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_LKP_READ_REQUEST_ITEM').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST_ITEM_copy1",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:03:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "WITH CTE as(SELECT distinct R.LoadStatus,\nR.TargetObjectName ,\nR.TargetFolderPath ,\nR.SourceFolderPath,\nR.SourceParentPath,\nR.SourceZoneID ,\nR.TargetZoneID\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM] R\nWHERE R.TargetObjectName = '@{pipeline().parameters.TargetObjectName}'\nand R.LoadStatus = '@{pipeline().parameters.LoadStatus}'\nand cast(R.LoadStartDate as date) <= @{concat('''',formatDateTime(utcnow(),'yyyy-MM-dd'),'''')}\nand R.LoadFrequency = '@{pipeline().parameters.LoadFrequency}' and R.ApprovalStatus = 'Approved'\nand R.TargetZoneID = @{pipeline().globalParameters.EnrichedZoneID} and R.ProcessingStatus = 'Active'\nGROUP BY R.LoadStatus, R.TargetObjectName ,R.SourceParentPath,\nR.TargetFolderPath , R.SourceZoneID , R.TargetZoneID,R.SourceFolderPath)\nSELECT Distinct\nLoadStatus,\nTargetObjectName ,\nTargetFolderPath ,\nSTRING_AGG(SourceFolderPath, ';') AS SourceFolderPath,\nSourceParentPath,\nSourceZoneID ,\nTargetZoneID\nFROM CTE\nGROUP BY LoadStatus, TargetObjectName ,SourceParentPath,\nTargetFolderPath , SourceZoneID , TargetZoneID",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "If Condition2",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM_copy1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_READ_DELTA_INCREMENT_copy1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_READ_DELTA_COUNT_copy1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(and(greater(activity('ACT_GEN_LKP_READ_REQUEST_ITEM_copy1').output.count,0),greater(activity('ACT_GEN_LKP_READ_REQUEST_ITEM').output.count,0)),and(greater(activity('ACT_GEN_LKP_READ_DELTA_COUNT_copy1').output.value[0].DeltaCount,0), greater(activity('ACT_GEN_LKP_READ_DELTA_INCREMENT_copy1').output.value[0].IncrementValue,0)))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "ACT_GEN_EXEC_DELTALAKE_NTBK",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DELTALAKE_NOTEBOOK",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetFolderPath": {
                                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM_copy1').output.value[0].TargetFolderPath",
                                                "type": "Expression"
                                            },
                                            "SourceFolderPath": {
                                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM_copy1').output.value[0].SourceFolderPath",
                                                "type": "Expression"
                                            },
                                            "LoadStatus": {
                                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM_copy1').output.value[0].LoadStatus",
                                                "type": "Expression"
                                            },
                                            "TargetObjectName": {
                                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM_copy1').output.value[0].TargetObjectName",
                                                "type": "Expression"
                                            },
                                            "LoadFrequency": {
                                                "value": "@pipeline().parameters.LoadFrequency",
                                                "type": "Expression"
                                            },
                                            "SourceParentPath": {
                                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM_copy1').output.value[0].SourceParentPath",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "If Condition2",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "SPRC_UPDATE_FAILURE_LOGS",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[DATACATALOGUE].[LogExtract_FailureUpdate]",
                                        "storedProcedureParameters": {
                                            "RequestID": {
                                                "value": {
                                                    "value": "@item().RequestID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "RequestItemID": {
                                                "value": {
                                                    "value": "@item().RequestItemID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "SourceFileTable": {
                                                "value": {
                                                    "value": "@item().SourceDeltaFileTable",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "TargetZoneID": {
                                                "value": {
                                                    "value": "@item().TargetZoneID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS_ASQL_CONFIG_DB",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "ACT_GEN_ERROR_LOG",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SPRC_UPDATE_FAILURE_LOGS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_CIF_LOG",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "SourceName": {
                                                "value": "pipeline().parameters.SystemName",
                                                "type": "Expression"
                                            },
                                            "ObjectName": {
                                                "value": "@pipeline().parameters.TargetObjectName",
                                                "type": "Expression"
                                            },
                                            "PipelineName": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "ActivityName": {
                                                "value": "@if(equals(string(activity('SPRC_UPDATE_FAILURE_LOGS')?.error?.message),''), '', 'SPRC_UPDATE_FAILURE_LOGS')",
                                                "type": "Expression"
                                            },
                                            "Message": {
                                                "value": "@concat(activity('SPRC_UPDATE_FAILURE_LOGS')?.error?.message, ' ')",
                                                "type": "Expression"
                                            },
                                            "DataFactory_Name": {
                                                "value": "@pipeline().DataFactory",
                                                "type": "Expression"
                                            },
                                            "PipelineRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerName": {
                                                "value": "@pipeline().TriggerName",
                                                "type": "Expression"
                                            },
                                            "Pipeline_TriggerType": {
                                                "value": "@pipeline().TriggerType",
                                                "type": "Expression"
                                            },
                                            "Load_Frequency": {
                                                "value": "@pipeline().parameters.LoadFrequency",
                                                "type": "Expression"
                                            },
                                            "RequestRunDateTime": {
                                                "value": "@formatDateTime(utcnow())",
                                                "type": "Expression"
                                            },
                                            "TargetZoneID": {
                                                "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                                "type": "Expression"
                                            },
                                            "ProcessingStatus": "Failure",
                                            "SourceZoneID": {
                                                "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                                "type": "Expression"
                                            },
                                            "INFO_TYPE": "ERROR",
                                            "Pipeline_TriggerTime": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Fail1",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": {
                                "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_EXEC_DELTALAKE_NTBK').error.message)",
                                "type": "Expression"
                            },
                            "errorCode": {
                                "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_EXEC_DELTALAKE_NTBK').error.code)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_READ_DELTA_COUNT_copy1",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:03:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT Count(1) [DeltaCount]   FROM [DATACATALOGUE].[TB_DELTA_ITEM] D\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R \nON R.RequestItemID=D.DeltaID\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R1\nON R.RequestID=R1.RequestID\nWHERE R1.TargetObjectName = '@{pipeline().parameters.TargetObjectName}' AND \nR1.LoadFrequency='@{pipeline().parameters.LoadFrequency}' AND \nR.TargetZoneID=@{pipeline().globalParameters.LandingZoneID}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_DELTA_FETCH",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_READ_DELTA_INCREMENT_copy1",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:03:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT CONVERT(int,D.IncrementValue) IncrementValue   FROM [DATACATALOGUE].[TB_DELTA_ITEM] D\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R \nON R.RequestItemID=D.DeltaID\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R1\nON R.RequestID=R1.RequestID\nWHERE  R1.TargetObjectName = '@{pipeline().parameters.TargetObjectName}' AND \nR1.LoadFrequency='@{pipeline().parameters.LoadFrequency}' AND \nR.TargetZoneID=@{pipeline().globalParameters.LandingZoneID} AND D.ItemName IS NULL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_DELTA_FETCH",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_READ_DELTA_COUNT_ERROR_LOG_copy1",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_DELTA_COUNT_copy1",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceName": {
                                    "value": "pipeline().parameters.SystemName",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.TargetObjectName",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load DeltaLake-Lookup Read Request",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_LKP_READ_DELTA_COUNT_copy1').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_READ_DELTA_INCREMENT_ERROR_LOG_copy1",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_DELTA_INCREMENT_copy1",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceName": {
                                    "value": "@pipeline().parameters.SystemName",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.TargetObjectName",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load DeltaLake-Lookup Read Request",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_LKP_READ_DELTA_INCREMENT_copy1').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM_copy1",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceName": {
                                    "value": "@pipeline().parameters.SystemName",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.TargetObjectName",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "@if(equals(string(activity('ACT_GEN_LKP_READ_REQUEST_ITEM_copy1')?.error?.message),''), '', 'ACT_GEN_LKP_READ_REQUEST_ITEM_copy1')",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_LKP_READ_REQUEST_ITEM_copy1').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetObjectName": {
                        "type": "int"
                    },
                    "SystemName": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/DeltaLake"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:10Z"
            },
            "etag": "1500f949-0000-0c00-0000-632aa7020000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ENRICH_DELTALAKE",
            "name": "PL_DATA_PROCESS_REQUEST_ENRICH_DELTALAKE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipelines Starts the Processing  of the extraction engine.",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:03:00",
                            "retry": 3,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT R.LoadStatus,R.TargetObjectName\nFROM [DATACATALOGUE].[TB_EXTRACT_REQUEST] E\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R\nON E.RequestID=R.RequestID\nWHERE E.ApprovalStatus = 'Approved'\nand E.SystemName = '@{pipeline().parameters.ProjectSource}'\nand R.LoadFrequency=  '@{pipeline().parameters.LoadFrequency}'\nand R.TargetZoneID=@{pipeline().globalParameters.EnrichedZoneID}\nGROUP BY R.LoadStatus,R.TargetObjectName\nORDER BY R.LoadStatus DESC ",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUESTS",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 20,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_PROCESS_REQUEST_ITEMS_ENRICH_DELTALAKE",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetObjectName": {
                                                "value": "@item().TargetObjectName",
                                                "type": "Expression"
                                            },
                                            "SystemName": {
                                                "value": "@pipeline().parameters.ProjectSource",
                                                "type": "Expression"
                                            },
                                            "LoadFrequency": {
                                                "value": "@pipeline().parameters.LoadFrequency",
                                                "type": "Expression"
                                            },
                                            "LoadStatus": {
                                                "value": "@item().LoadStatus",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceName": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load DeltaLake-Lookup Read Request",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichLoad DeltaLake- Failure : ',activity('ACT_GEN_LKP_READ_REQUEST').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ProjectSource": {
                        "type": "string",
                        "defaultValue": "HANA_R_ADF_PV"
                    },
                    "LoadFrequency": {
                        "type": "string",
                        "defaultValue": "Daily"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/DeltaLake"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:10Z"
            },
            "etag": "15000a4a-0000-0c00-0000-632aa7020000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_TRIGER_PIPELINE_DELTALAKE",
            "name": "PL_DATA_TRIGER_PIPELINE_DELTALAKE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_EXEC_LAND_TO_ACQ",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_PROCESS_REQUEST",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ProjectSource": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "LoadFrequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ACQ_ENRICHED",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_EXEC_LAND_TO_ACQ",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_PROCESS_REQUEST_ENRICH_DELTALAKE",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ProjectSource": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "LoadFrequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ProjectSource": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:12Z"
            },
            "etag": "15001f4a-0000-0c00-0000-632aa7040000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_CATALOGUE_ADLS_SQL_SCRAPE",
            "name": "PL_DATA_CATALOGUE_ADLS_SQL_SCRAPE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "Pipeline to scrape ADLS and SQL layers, with script running from Databricks and geting input from [CATALOGUE].[DATASCRAPE_INPUT] table",
                "activities": [
                    {
                        "name": "ACT_GEN_WEB_DATABASE_SPN_NAME",
                        "description": "User ID of DB to write the Output",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.DataCatalogueSpnID",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_WEB_DATABASE_SPN_KEY",
                        "description": "Password from keyVault of DB to write the Output",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@pipeline().globalParameters.DataCatalogueSpnKey",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "ACT_NTBK_ADLS_DATA_LINEAGE",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_WEB_DATABASE_SPN_NAME",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_WEB_DATABASE_SPN_KEY",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/PLATFORM_DATACATALOGUE/DATACATALOGUE_SCRIPTS/DATA_LINEAGE_ADLS",
                            "baseParameters": {
                                "DATA_SCRAPE_UID": {
                                    "value": "@activity('ACT_GEN_WEB_DATABASE_SPN_NAME').output.value",
                                    "type": "Expression"
                                },
                                "DATA_SCRAPE_UID_PWD": {
                                    "value": "@activity('ACT_GEN_WEB_DATABASE_SPN_KEY').output.value",
                                    "type": "Expression"
                                },
                                "DATA_SCRAPE_OUTPUT_SERVER_NAME": {
                                    "value": "@pipeline().globalParameters.DataCatalogueSQLServer",
                                    "type": "Expression"
                                },
                                "DATA_SCRAPE_OUTPUT_DB_NAME": {
                                    "value": "@pipeline().globalParameters.DataCatalogueSQLDb",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_Databricks_Datacatalogue_MSI",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "DatabricksWorkspace": {
                                    "value": "@pipeline().globalParameters.DatabricksURL",
                                    "type": "Expression"
                                },
                                "DatabricksCluster": {
                                    "value": "@pipeline().globalParameters.DataCatalogueClusterID",
                                    "type": "Expression"
                                },
                                "DatabricksResource": {
                                    "value": "@pipeline().globalParameters.DatabricksResourceID",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_APPEND_ERR_LINEAGE",
                        "type": "AppendVariable",
                        "dependsOn": [
                            {
                                "activity": "ACT_NTBK_ADLS_DATA_LINEAGE",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "error_array",
                            "value": {
                                "value": "@activity('ACT_NTBK_ADLS_DATA_LINEAGE').output.runError",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "EX_PL_ADLS_SCRAPE_UNHARMONISED",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_WEB_DATABASE_SPN_NAME",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_WEB_DATABASE_SPN_KEY",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_ADLS_SCRAPE_UNHARMONISED",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "EX_PL_ADLS_SCRAPE_HARMONISED",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_WEB_DATABASE_SPN_NAME",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_WEB_DATABASE_SPN_KEY",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_ADLS_SCRAPE_HARMONISED",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "EX_PL_ADLS_SCRAPE_CURATED",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_WEB_DATABASE_SPN_NAME",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_WEB_DATABASE_SPN_KEY",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_ADLS_SCRAPE_CURATED",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "EX_PL_SQL_SCRAPE_CURATED",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_WEB_DATABASE_SPN_NAME",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_WEB_DATABASE_SPN_KEY",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_SQL_SCRAPE_CURATED",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "EX_PL_DATA_SCRAPE_CLEANUP",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "EX_PL_ADLS_SCRAPE_UNHARMONISED",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "EX_PL_ADLS_SCRAPE_HARMONISED",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "EX_PL_ADLS_SCRAPE_CURATED",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "EX_PL_SQL_SCRAPE_CURATED",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "ACT_NTBK_ADLS_DATA_LINEAGE",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_SCRAPE_CLEANUP",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "variables": {
                    "error_array": {
                        "type": "Array"
                    }
                },
                "folder": {
                    "name": "Platform Enhancements/DATA_CATALOGUE"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500b549-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_REUSABLE_USECASE",
            "name": "PL_DATA_REUSABLE_USECASE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_OBJ_DETAILS",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT RequestID,RequestItemID,DeltaExpressionID,TargetFolderPath,TargetParentPath,TargetObjectName,SourceFolderPath,ObjectName,LoadStatus,COALESCE(LowOffsetValue,'0') AS LowOffsetValue,COALESCE(HighOffsetValue,'0') AS HighOffsetValue,COALESCE(IncrementValue,0) AS IncrementValue FROM DATACATALOGUE.TB_REQUEST_ITEM ITM LEFT OUTER JOIN DATACATALOGUE.TB_DELTA_ITEM DLT  ON ITM.RequestItemID=DLT.DeltaID AND DLT.ItemName IS NOT NULL  where TargetZoneID=4 AND TargetObjectName='@{pipeline().parameters.TargetObjectName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "ACT_DB_TRN_NOTEBOOK",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_OBJ_DETAILS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_MERGE_PART_DETAILS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP__FETCH_DELTA_OFFSET",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": {
                                "value": "@concat('/DIF/',pipeline().parameters.TargetObjectName,'_',pipeline().parameters.UseCase)",
                                "type": "Expression"
                            },
                            "baseParameters": {
                                "TargetObjectName": {
                                    "value": "@pipeline().parameters.TargetObjectName",
                                    "type": "Expression"
                                },
                                "UseCase": {
                                    "value": "@pipeline().parameters.UseCase",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.ObjectName",
                                    "type": "Expression"
                                },
                                "TargetFolderPath": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@string(activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestID)",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@string(activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestItemID)",
                                    "type": "Expression"
                                },
                                "SourceMetadataInfo": {
                                    "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.SourceMetadataInfo",
                                    "type": "Expression"
                                },
                                "MergeOrderBy": {
                                    "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.MergeOrderBy",
                                    "type": "Expression"
                                },
                                "PartitionType": {
                                    "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.PartitionType",
                                    "type": "Expression"
                                },
                                "ItemName": {
                                    "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.ItemName",
                                    "type": "Expression"
                                },
                                "NoOfPartitions": {
                                    "value": "@string(activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.NoOfPartitions)",
                                    "type": "Expression"
                                },
                                "ItemDataType": {
                                    "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.ItemDataType",
                                    "type": "Expression"
                                },
                                "DataTypeFormat": {
                                    "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.DataTypeFormat",
                                    "type": "Expression"
                                },
                                "PartitionHierarchy": {
                                    "value": "@activity('ACT_GEN_LKP_MERGE_PART_DETAILS').output.firstRow.PartitionHierarchy",
                                    "type": "Expression"
                                },
                                "SourceFolderPath": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.SourceFolderPath",
                                    "type": "Expression"
                                },
                                "Env_Path": {
                                    "value": "@pipeline().globalParameters.ADLS_URL",
                                    "type": "Expression"
                                },
                                "TargetParentPath": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.TargetParentPath",
                                    "type": "Expression"
                                },
                                "LowOffsetValue": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.LowOffsetValue",
                                    "type": "Expression"
                                },
                                "HighOffsetValue": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.HighOffsetValue",
                                    "type": "Expression"
                                },
                                "LoadStatus": {
                                    "value": "@activity('ACT_GEN_LKP__FETCH_DELTA_OFFSET').output.firstRow.Load_Status",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_Databricks_CIF",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "DatabricksURL": {
                                    "value": "@pipeline().globalParameters.DatabricksURL",
                                    "type": "Expression"
                                },
                                "DatabricksResource": {
                                    "value": "@pipeline().globalParameters.DatabricksResourceID",
                                    "type": "Expression"
                                },
                                "ClusterID": {
                                    "value": "@pipeline().globalParameters.ReusableClusterID",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_OBJ_DETAILS",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Load-Lookup Read Item Request",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichReusableLoad - Failure : ',activity('ACT_GEN_LKP_OBJ_DETAILS').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Reusable Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_DB_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_DB_TRN_NOTEBOOK",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Reusable Load-Azure Databricks Notebook",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichReusableLoad - Failure : ',activity('ACT_DB_TRN_NOTEBOOK').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Reusable Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SUCCESS_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "",
                                "Message": {
                                    "value": "@concat('EnrichReusableLoad : ',activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.ObjectName)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enr Reusable",
                                "TargetZoneID": {
                                    "value": "4",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "SUCCESS",
                                "SourceZoneID": {
                                    "value": "3",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "SUCCESS",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_MERGE_PART_DETAILS",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select TargetObjectName ,COALESCE(SourceMetadataInfo,'NA') AS SourceMetadataInfo,COALESCE(MergeOrderBy ,'NA') AS MergeOrderBy,\nCOALESCE(PartitionType,'NA') AS PartitionType,\nCOALESCE(ItemName,'NA') AS ItemName,\nCOALESCE(NoOfPartitions,0) AS NoOfPartitions,\nCOALESCE(ItemDataType,'NA') AS ItemDataType,\nCOALESCE(DataTypeFormat,'NA') AS DataTypeFormat,\nCOALESCE(PartitionHierarchy,'NA') AS PartitionHierarchy\nfrom [DATACATALOGUE].[TB_REQUEST_ITEM] REQ\nLEFT OUTER JOIN [DATACATALOGUE].[TB_PARTITION] PAR_HDR\nON REQ.RequestItemID=PAR_HDR.RequestItemID\nAND REQ.RequestID=PAR_HDR.RequestID\nLEFT OUTER JOIN [DATACATALOGUE].[TB_PARTITION_ITEM] PAR_ITM\nON PAR_HDR.PartitionID=PAR_ITM.PartitionID\nWhere REQ.TargetObjectName='@{pipeline().parameters.TargetObjectName}' AND \nREQ.TargetZoneID = 4",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_SPRC_CAPTURE_LOG",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_DB_TRN_NOTEBOOK",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[LogExtract]",
                            "storedProcedureParameters": {
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().TriggerId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaID": {
                                    "value": {
                                        "value": "@if(equals(pipeline().parameters.LoadStatus,'Initial'),0,activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.DeltaExpressionID)",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ErrorFolderPath": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "Existval": {
                                    "value": {
                                        "value": "true",
                                        "type": "Expression"
                                    },
                                    "type": "Boolean"
                                },
                                "IncrementalValue": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP__FETCH_DELTA_OFFSET').output.firstRow.IncrementValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceColumnCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "SourceFileTable": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceFolderPath": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "SourceSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.EnrichedZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetColumnCount": {
                                    "value": {
                                        "value": "@{activity('ACT_DB_TRN_NOTEBOOK').output.runOutput.TargetColumnCount}",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetFileTable": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.TargetObjectName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetFolderPath": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetRecordCount": {
                                    "value": {
                                        "value": "@{activity('ACT_DB_TRN_NOTEBOOK').output.runOutput.TargetRecordCount}",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "4",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "LowOffsetValue": {
                                    "value": {
                                        "value": "@if(equals(pipeline().parameters.LoadStatus,'Initial'),0,activity('ACT_GEN_LKP__FETCH_DELTA_OFFSET').output.firstRow.LowOffsetValue)",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP__FETCH_DELTA_OFFSET",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_OBJ_DETAILS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT COALESCE(DLT.LowOffsetValue,0) AS LowOffsetValue,\n             COALESCE(DLT.IncrementValue,0) AS IncrementValue,\n             CASE WHEN DLT.LowOffsetValue=0 THEN 'Initial'    \n                      WHEN DLT.LowOffsetValue>0 and '@{pipeline().parameters.LoadStatus}'='Delta'  THEN 'Delta' \n                      ELSE '@{pipeline().parameters.LoadStatus}' END AS Load_Status\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM] ITM\nLEFT OUTER JOIN  [DATACATALOGUE].[TB_DELTA_ITEM] DLT\nON ITM.RequestItemID = DLT.DeltaID\nWHERE RequestID = @{activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestID}\nAND  RequestItemID = @{activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestItemID}\nand ItemName is NULL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_CAPTURE_LOG_ERROR",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@activity('ACT_GEN_LKP_OBJ_DETAILS').output.firstRow.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "Enrich Reusable Load-LogExtract SP",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@concat('EnrichReusableLoad - Failure : ',activity('ACT_GEN_SPRC_CAPTURE_LOG').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Reusable Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetObjectName": {
                        "type": "string"
                    },
                    "UseCase": {
                        "type": "string",
                        "defaultValue": "Main"
                    },
                    "LoadStatus": {
                        "type": "string",
                        "defaultValue": "Delta"
                    }
                },
                "folder": {
                    "name": "General"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:07Z"
            },
            "etag": "15009649-0000-0c00-0000-632aa6ff0000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_COPY_FILES_JSON",
            "name": "PL_DATA_COPY_FILES_JSON",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_MT_COPY_INGEST_ACQUISITION",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_MAPPING",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_SYSTEM_DETAILS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreWriteSettings",
                                    "copyBehavior": "MergeFiles"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "value": "@json(replace(replace(activity('ACT_GEN_LKP_FETCH_MAPPING').output.firstRow.json_output,']}','],\"collectionReference\": \"$[''CollectionList'']\",\"mapComplexValuesToString\": false}')\n,'CollectionList',activity('ACT_GEN_LKP_SYSTEM_DETAILS').output.firstRow.CollectionReference))",
                                "type": "Expression"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_ADLS_JSON_FILE_NAME",
                                "type": "DatasetReference",
                                "parameters": {
                                    "SourceFolderPath": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "SourceFileName": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_ADLS_TARGET_FILE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@{replace(pipeline().parameters.SourceFileName,'.json','.parquet')}",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_CAPTURE_LOGS_JSON",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TargetFolderPath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "DeltaID": {
                                    "value": "@pipeline().parameters.DeltaID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "ActvityID": {
                                    "value": "@pipeline().TriggerId",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "TargetFileName": {
                                    "value": "@{replace(pipeline().parameters.SourceFileName,'.json','.parquet')}",
                                    "type": "Expression"
                                },
                                "SourceFileName": {
                                    "value": "@pipeline().parameters.SourceFileName",
                                    "type": "Expression"
                                },
                                "SourceFolderPath": {
                                    "value": "@pipeline().parameters.SourceFolderPath",
                                    "type": "Expression"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.rowsCopied",
                                    "type": "Expression"
                                },
                                "SourceDeltaRecordCount": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.rowsRead",
                                    "type": "Expression"
                                },
                                "ExtractionStartTime": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.executionDetails[0].start",
                                    "type": "Expression"
                                },
                                "ExtractionDuration": {
                                    "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.copyDuration",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Succeeded",
                                    "Skipped",
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "@trim(concat(if(equals(string(activity('ACT_GEN_LKP_FETCH_MAPPING')?.error?.message),''), '', 'ACT_GEN_LKP_FETCH_MAPPING'),' '\n,if(equals(string(activity('ACT_MT_COPY_INGEST_ACQUISITION')?.error?.message),''), '', 'ACT_MT_COPY_INGEST_ACQUISITION'),' '\n,if(equals(string(activity('ACT_GEN_SPRC_CAPTURE_LOG')?.error?.message),''), '', 'ACT_GEN_SPRC_CAPTURE_LOG'),' '\n,if(equals(string(activity('ACT_GEN_LKP_SYSTEM_DETAILS')?.error?.message),''), '', 'ACT_GEN_LKP_SYSTEM_DETAILS')))",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@trim(concat(activity('ACT_GEN_LKP_FETCH_MAPPING')?.error?.message,' '\n,activity('ACT_MT_COPY_INGEST_ACQUISITION')?.error?.message,' '\n,activity('ACT_GEN_SPRC_CAPTURE_LOG')?.error?.message,' '\n,activity('ACT_GEN_LKP_SYSTEM_DETAILS')?.error?.message, ' '))",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_MAPPING",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[DATACATALOGUE].[SP_ColumnMapping_Json]",
                                "storedProcedureParameters": {
                                    "RequestID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestID",
                                            "type": "Expression"
                                        }
                                    },
                                    "RequestItemID": {
                                        "type": "Int32",
                                        "value": {
                                            "value": "@pipeline().parameters.RequestItemID",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_DELTA_FETCH",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_SYSTEM_DETAILS",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT \n      CollectionReference\n FROM [DATACATALOGUE].[TB_SYSTEM_REQUEST] SYS\nwhere SYS.SystemName = '@{pipeline().parameters.SystemName}'\nand SYS.ProcessingStatus = 'Active'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_DELTA_FETCH",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_SPRC_CAPTURE_LOG",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_MT_COPY_INGEST_ACQUISITION",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[LogExtract]",
                            "storedProcedureParameters": {
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().TriggerId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaID": {
                                    "value": {
                                        "value": "@pipeline().parameters.DeltaID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ErrorFolderPath": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "Existval": {
                                    "value": {
                                        "value": "false",
                                        "type": "Expression"
                                    },
                                    "type": "Boolean"
                                },
                                "IncrementalValue": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.Lnd_RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceColumnCount": {
                                    "value": "1",
                                    "type": "Int32"
                                },
                                "SourceFileTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.Lnd_FileName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceFolderPath": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_MT_COPY_INGEST_ACQUISITION').output.rowsRead",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "TargetColumnCount": {
                                    "value": "0",
                                    "type": "Int32"
                                },
                                "TargetFileTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetRecordCount": {
                                    "value": {
                                        "value": "0",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.LandingZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "LowOffsetValue": {
                                    "value": null,
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "Lnd_FileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "LoadStatus": {
                        "type": "string"
                    },
                    "SourceRecordCount": {
                        "type": "string"
                    },
                    "SourceColumnCount": {
                        "type": "string"
                    },
                    "SystemName": {
                        "type": "string"
                    },
                    "Lnd_RequestItemID": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Land to Acq/JSON"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:09Z"
            },
            "etag": "1500f049-0000-0c00-0000-632aa7010000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_ITEMS_JSON",
            "name": "PL_DATA_PROCESS_REQUEST_ITEMS_JSON",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipeline is responsible for Processing all the Extract Request Items",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "WITH LandingLogs AS \n(SELECT TargetFileTable,RequestID,RequestItemID,TargetColumnCount ,\nTargetRecordCount,RequestRunDateTime,SourceFileTable FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] \nWHERE TargetZoneID=@{pipeline().globalParameters.LandingZoneID} AND RequestId=@{pipeline().parameters.RequestID} AND ProcessingStatus ='Success'),\nAquisitionLogs AS\n(SELECT TargetFileTable,RequestID,RequestItemID FROM [DATACATALOGUE].[TB_REQUEST_ITEM_RUNLOGS] \nWHERE TargetZoneID=@{pipeline().globalParameters.AcquisitionZoneID} AND RequestId=@{pipeline().parameters.RequestID} AND ProcessingStatus ='Success')\nSELECT R.LoadStatus , \n\t\tR.RequestID ,\n\t\tR.RequestItemID,\n\t\tR.ObjectName\t\t ,\n\t\tR.TargetFolderPath\t\t ,\n\t\tR.TargetFileTable\t\t\t ,\n\t\tR.SourceFolderPath\t\t ,\n\t\tR.SourceFileTable\t\t\t ,\n\t\tL.TargetFileTable AS SourceDeltaFileTable,\n                L.SourceFileTable AS Lnd_SourceFileTable,\n                L.RequestItemID Lnd_RequestItemID,\n\t\tR.DeltaExpressionID\t\t ,\n\t\tR.SourceZoneID   ,\n\t\tR.TargetZoneID,\nL.TargetColumnCount SourceColumnCount,\nL.TargetRecordCount SourceRecordCount\nFROM LandingLogs L LEFT OUTER JOIN \nAquisitionLogs A ON (A.RequestID=L.RequestID AND Replace(A.TargetFileTable,'parquet','json')=L.TargetFileTable)\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R ON\nR.RequestID=L.RequestID\nWHERE A.RequestID IS NULL AND \nR.RequestID = @{pipeline().parameters.RequestID}\nand (R.LoadStatus = 'Initial'\nor R.LoadStatus = 'Delta')\nand cast(R.LoadStartDate as date)  <=  @{concat('''',formatDateTime(utcnow(),'yyyy-MM-dd'),'''')}\nand R.LoadFrequency  =  '@{pipeline().parameters.LoadFrequency}'\nand R.ApprovalStatus = 'Approved'\nand R.TargetZoneID\t= @{pipeline().globalParameters.AcquisitionZoneID}\nand R.ProcessingStatus = 'Active'\nand L.TargetRecordCount > 0\nORDER BY L.RequestID,L.RequestRunDateTime",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUEST_ITEM",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST_ITEM').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_COPY_FILES_JSON",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetFolderPath": {
                                                "value": "@item().TargetFolderPath",
                                                "type": "Expression"
                                            },
                                            "ObjectName": {
                                                "value": "@item().ObjectName",
                                                "type": "Expression"
                                            },
                                            "DeltaID": {
                                                "value": "@item().DeltaExpressionID",
                                                "type": "Expression"
                                            },
                                            "RequestItemID": {
                                                "value": "@item().RequestItemID",
                                                "type": "Expression"
                                            },
                                            "SourceFolderPath": {
                                                "value": "@item().SourceFolderPath",
                                                "type": "Expression"
                                            },
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "Lnd_FileName": {
                                                "value": "@item().Lnd_SourceFileTable",
                                                "type": "Expression"
                                            },
                                            "SourceFileName": {
                                                "value": "@item().SourceDeltaFileTable",
                                                "type": "Expression"
                                            },
                                            "LoadStatus": {
                                                "value": "@item().LoadStatus",
                                                "type": "Expression"
                                            },
                                            "SourceRecordCount": {
                                                "value": "@item().SourceRecordCount",
                                                "type": "Expression"
                                            },
                                            "SourceColumnCount": {
                                                "value": "@item().SourceColumnCount",
                                                "type": "Expression"
                                            },
                                            "SystemName": {
                                                "value": "@pipeline().parameters.SystemName",
                                                "type": "Expression"
                                            },
                                            "Lnd_RequestItemID": {
                                                "value": "@item().Lnd_RequestItemID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST_ITEM",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Lookup Read Item Request",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_READ_REQUEST_ITEM').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "RequestID": {
                        "type": "int"
                    },
                    "SystemName": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Land to Acq/JSON"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:10Z"
            },
            "etag": "1500054a-0000-0c00-0000-632aa7020000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_PROCESS_REQUEST_JSON",
            "name": "PL_DATA_PROCESS_REQUEST_JSON",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "description": "This Pipelines Starts the Processing  of the extraction engine.",
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_READ_REQUEST",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT E.RequestID,\nE.SystemName\nFROM [DATACATALOGUE].[TB_EXTRACT_REQUEST] E\nINNER JOIN [DATACATALOGUE].[TB_REQUEST_ITEM] R\nON E.RequestID=R.RequestID\nWHERE E.ApprovalStatus = 'Approved'\nand E.SystemName = '@{pipeline().parameters.ProjectSource}'\nand R.LoadFrequency=  '@{pipeline().parameters.LoadFrequency}'\nGROUP BY E.RequestID,\nE.SystemName\nORDER BY E.RequestID \n",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_ITR_FOR_EACH_REQUESTS",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('ACT_GEN_LKP_READ_REQUEST').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 30,
                            "activities": [
                                {
                                    "name": "ACT_GEN_EXPL_ITEM_PROCESSING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_PROCESS_REQUEST_ITEMS_JSON",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "RequestID": {
                                                "value": "@item().RequestID",
                                                "type": "Expression"
                                            },
                                            "SystemName": {
                                                "value": "@item().SystemName",
                                                "type": "Expression"
                                            },
                                            "LoadFrequency": {
                                                "value": "@pipeline().parameters.LoadFrequency",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_READ_REQUEST",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceName": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Lookup Read Request",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_READ_REQUEST').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "Load_Frequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ProjectSource": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Land to Acq/JSON"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:11Z"
            },
            "etag": "1500164a-0000-0c00-0000-632aa7030000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_TRIGER_PIPELINE_API",
            "name": "PL_DATA_TRIGER_PIPELINE_API",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_EXEC_LAND_TO_ACQ",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_PROCESS_REQUEST_JSON",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ProjectSource": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "LoadFrequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ACQ_ENRICHED",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_EXEC_LAND_TO_ACQ",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_PROCESS_REQUEST_ENRICH",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ProjectSource": {
                                    "value": "@pipeline().parameters.ProjectSource",
                                    "type": "Expression"
                                },
                                "LoadFrequency": {
                                    "value": "@pipeline().parameters.LoadFrequency",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "ProjectSource": {
                        "type": "string"
                    },
                    "LoadFrequency": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:12Z"
            },
            "etag": "1500234a-0000-0c00-0000-632aa7040000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_SOP_REUSABLE_TRIGER_BILLING",
            "name": "PL_DATA_SOP_REUSABLE_TRIGER_BILLING",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_FILE_EXISTS_CHECK_BILLING",
                        "description": "Lookup of Billing Reusable",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Time Offset",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select count(1) AS File_Count from(\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'BILLING_DOCUMENT_ITEM'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'BILLING_DOCUMENT_HEADER'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'DOCUMENT_LINE'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'ACCOUNTING_DOCUMENT'\n) file_check",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "ACT_IT_IF_SOURCE_FILE_AVAILABLE_BILLING",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FILE_EXISTS_CHECK_BILLING",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('ACT_GEN_LKP_FILE_EXISTS_CHECK_BILLING').output.firstRow.File_Count,4)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "PL_EXEC_DATA_REUSABLE_BILLING",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_REUSABLE_USECASE_JOB_CLUSTER",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetObjectName": {
                                                "value": "@pipeline().parameters.TargetObjectName",
                                                "type": "Expression"
                                            },
                                            "UseCase": "Main",
                                            "LoadStatus": "Delta"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Time Offset",
                        "description": "Setting time Offset",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "TimeOffset",
                            "value": {
                                "value": "@concat(replace(substring(addMinutes(utcNow(),-165),11,5),':',''),'00')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_IT_IF_SOURCE_FILE_AVAILABLE_BILLING",
                                "dependencyConditions": [
                                    "Failed",
                                    "Skipped"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "@trim(concat(if(equals(string(activity('Time Offset')?.error?.message),''), '', 'Time Offset'),' '\n,if(equals(string(activity('ACT_GEN_LKP_FILE_EXISTS_CHECK_BILLING')?.error?.message),''), '', 'ACT_GEN_LKP_FILE_EXISTS_CHECK_BILLING')))",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@trim(concat(activity('Time Offset')?.error?.message,' '\n,activity('ACT_GEN_LKP_FILE_EXISTS_CHECK_BILLING')?.error?.message))",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Reusable Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetObjectName": {
                        "type": "string"
                    }
                },
                "variables": {
                    "TimeOffset": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/SOP Reusable"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500c549-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_SOP_REUSABLE_TRIGER_DELIVERY",
            "name": "PL_DATA_SOP_REUSABLE_TRIGER_DELIVERY",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_FILE_EXISTS_CHECK_DELIVERY",
                        "description": "Lookup of Delivery Reusable",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Time Offset",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select count(1) AS File_Count from(\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'SALES_DOC_DELIVERY_ITEM'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'SALES_DOC_DELIVERY_HEADER'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'SALES_DOCUMENT_ITEM_STATUS'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'HEADER_STATUS_ADMINISTRATIVE_SALES_DOCUMENT'\n) file_check",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "ACT_IT_IF_SOURCE_FILE_AVAILABLE_DELIVERY",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FILE_EXISTS_CHECK_DELIVERY",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('ACT_GEN_LKP_FILE_EXISTS_CHECK_DELIVERY').output.firstRow.File_Count,4)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "PL_EXEC_DATA_REUSABLE_DELIVERY",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_REUSABLE_USECASE_JOB_CLUSTER",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetObjectName": {
                                                "value": "@pipeline().parameters.TargetObjectName",
                                                "type": "Expression"
                                            },
                                            "UseCase": "Main",
                                            "LoadStatus": "Delta"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Time Offset",
                        "description": "Setting Time Offset",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "TimeOffset",
                            "value": {
                                "value": "@concat(replace(substring(addMinutes(utcNow(),-165),11,5),':',''),'00')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_IT_IF_SOURCE_FILE_AVAILABLE_DELIVERY",
                                "dependencyConditions": [
                                    "Skipped",
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "@trim(concat(if(equals(string(activity('Time Offset')?.error?.message),''), '', 'Time Offset'),' '\n,if(equals(string(activity('ACT_GEN_LKP_FILE_EXISTS_CHECK_DELIVERY')?.error?.message),''), '', 'ACT_GEN_LKP_FILE_EXISTS_CHECK_DELIVERY')))",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@trim(concat(activity('Time Offset')?.error?.message,' '\n,activity('ACT_GEN_LKP_FILE_EXISTS_CHECK_DELIVERY')?.error?.message))",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Reusable Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetObjectName": {
                        "type": "string"
                    }
                },
                "variables": {
                    "TimeOffset": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/SOP Reusable"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500c049-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_SOP_REUSABLE_TRIGER_ORDER",
            "name": "PL_DATA_SOP_REUSABLE_TRIGER_ORDER",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_LKP_FILE_EXISTS_CHECK",
                        "description": "Lookup of Order Reusable",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Time Offset",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "select count(1) AS File_Count from(\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'SALES_DOCUMENT_ITEM'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'SALES_DOCUMENT_HEADER'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'SALES_DOCUMENT_ITEM_STATUS'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'HEADER_STATUS_ADMINISTRATIVE_SALES_DOCUMENT'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'SALES_BUSINESS_DOCUMENT'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'SALES_DOCUMENT_SCHEDULING_LINE'\nUNION\nselect targetfiletable from DATACATALOGUE.TB_REQUEST_ITEM_RUNLOGS\nWHERE left(right(sourcefiletable,22),14) = FORMAT(cast(getdate() as date),'yyyyMMdd') + '@{variables('TimeOffset')}'\nand TargetZOneID=3 AND ProcessingStatus='Success'\nAND TargetFileTable = 'SALES_INDIVIDUAL_RECORD'\n) file_check",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_EXTRACT_REQUESTS",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "ACT_IT_IF_SOURCE_FILE_AVAILABLE",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FILE_EXISTS_CHECK",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('ACT_GEN_LKP_FILE_EXISTS_CHECK').output.firstRow.File_Count,7)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "PL_EXEC_DATA_REUSABLE",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DATA_REUSABLE_USECASE_JOB_CLUSTER",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetObjectName": {
                                                "value": "@pipeline().parameters.TargetObjectName",
                                                "type": "Expression"
                                            },
                                            "UseCase": "Main",
                                            "LoadStatus": "Delta"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Time Offset",
                        "description": "Setting Time Offset",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "TimeOffset",
                            "value": {
                                "value": "@concat(replace(substring(addMinutes(utcNow(),-75),11,5),':',''),'00')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_IT_IF_SOURCE_FILE_AVAILABLE",
                                "dependencyConditions": [
                                    "Skipped",
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": {
                                    "value": "@trim(concat(if(equals(string(activity('Time Offset')?.error?.message),''), '', 'Time Offset'),' '\n,if(equals(string(activity('ACT_GEN_LKP_FILE_EXISTS_CHECK')?.error?.message),''), '', 'ACT_GEN_LKP_FILE_EXISTS_CHECK')))",
                                    "type": "Expression"
                                },
                                "Message": {
                                    "value": "@trim(concat(activity('Time Offset')?.error?.message,' '\n,activity('ACT_GEN_LKP_FILE_EXISTS_CHECK')?.error?.message))",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Enrich Reusable Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.Enriched_ZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetObjectName": {
                        "type": "string"
                    }
                },
                "variables": {
                    "TimeOffset": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "ProjectSpecificRequestProcessor/SOP Reusable"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500c349-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/PL_DATA_CAPTURE_LOGS_JSON",
            "name": "PL_DATA_CAPTURE_LOGS_JSON",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "ACT_GEN_SPRC_CAPTURE_LOG",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "ACT_GEN_LKP_FETCH_SOURCE_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[DATACATALOGUE].[LogExtract]",
                            "storedProcedureParameters": {
                                "ActvityID": {
                                    "value": {
                                        "value": "@pipeline().parameters.ActvityID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "DeltaID": {
                                    "value": {
                                        "value": "@pipeline().parameters.DeltaID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ErrorFolderPath": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ErrorRecordCount": {
                                    "value": null,
                                    "type": "Int32"
                                },
                                "Existval": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.Exists",
                                        "type": "Expression"
                                    },
                                    "type": "Boolean"
                                },
                                "IncrementalValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.IncrementValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().parameters.PipelineRunID",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "RequestID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestItemID": {
                                    "value": {
                                        "value": "@pipeline().parameters.RequestItemID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "RequestRunDateTime": {
                                    "value": {
                                        "value": "@pipeline().TriggerTime",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SourceColumnCount": {
                                    "value": {
                                        "value": "@if(contains(string(activity('ACT_GEN_META_TARGET').output.structure), 'SourceColumnCount'),add(int(activity('ACT_GEN_LKP_FETCH_SOURCE_COUNT').output.firstRow.SourceColumnCount),2),activity('ACT_GEN_META_TARGET').output.columnCount)",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceFileTable": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceFileName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "SourceRecordCount": {
                                    "value": {
                                        "value": "@if(contains(string(activity('ACT_GEN_META_TARGET').output.structure), 'SourceRecordCount'),activity('ACT_GEN_LKP_FETCH_SOURCE_COUNT').output.firstRow.SourceRecordCount,activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').output.value[0].TargetDeltaRecordCount)",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "SourceSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "SourceZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.LandingZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetColumnCount": {
                                    "value": {
                                        "value": "@{activity('ACT_GEN_META_TARGET').output.columnCount}",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetFileTable": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_META_TARGET').output.itemName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetFolderPath": {
                                    "value": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TargetRecordCount": {
                                    "value": {
                                        "value": "@activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').output.value[0].TargetDeltaRecordCount",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "TargetSchemaName": {
                                    "value": null,
                                    "type": "String"
                                },
                                "TargetZoneID": {
                                    "value": {
                                        "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "LowOffsetValue": {
                                    "value": {
                                        "value": "@pipeline().parameters.OffsetValue",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                },
                                "ExtractionStartTime": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionStartTime",
                                        "type": "Expression"
                                    },
                                    "type": "Datetime"
                                },
                                "ExtractionDurationInt": {
                                    "value": {
                                        "value": "@pipeline().parameters.ExtractionDuration",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_ASQL_CONFIG_DATABASE",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "ACT_GEN_META_TARGET",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DS_ADLS_TARGET_DATASET_PARQUET",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@{replace(pipeline().parameters.TargetFileName,'txt','parquet')}",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "columnCount",
                                "exists",
                                "itemName",
                                "structure"
                            ],
                            "storeSettings": {
                                "type": "AzureDataLakeStoreReadSettings",
                                "recursive": true
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_CAPTURE_COUNT",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DATA_VALIDATION",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "FolderPath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "FileName": {
                                    "value": "@pipeline().parameters.TargetFileName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "TargetFolderPath": {
                                    "value": "@pipeline().parameters.TargetFolderPath",
                                    "type": "Expression"
                                },
                                "TargetFileName": {
                                    "value": "@pipeline().parameters.TargetFileName",
                                    "type": "Expression"
                                },
                                "TargetDeltaRecordCount": {
                                    "value": "@pipeline().parameters.TargetDeltaRecordCount",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_EXEC_CAPTURE_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT  TargetDeltaRecordCount\nFROM [DATACATALOGUE].[TB_REQUEST_ITEM]\nWHERE RequestID = @{pipeline().parameters.RequestID}\nand RequestItemID = @{pipeline().parameters.RequestItemID}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_SQL_FILE_EXISTS_CHECK",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_SUCCESS_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad : ',activity('ACT_GEN_META_TARGET').output.itemName)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "SUCCESS",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "SUCCESS",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_SPRC_CAPTURE_LOG",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_Stored_Proc",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_SPRC_CAPTURE_LOG').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_META_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_META_TARGET",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_Metadata_Check",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_META_TARGET').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_TAR_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_TARGET_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_TargetCount_Check",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_TARGET_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_EXEC_LKP_SRC_CNT_ERROR_LOG",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_LKP_FETCH_SOURCE_COUNT",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_CIF_LOG",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectName": {
                                    "value": "@pipeline().parameters.ObjectName",
                                    "type": "Expression"
                                },
                                "RequestItemID": {
                                    "value": "@pipeline().parameters.RequestItemID",
                                    "type": "Expression"
                                },
                                "RequestID": {
                                    "value": "@pipeline().parameters.RequestID",
                                    "type": "Expression"
                                },
                                "PipelineName": {
                                    "value": "@pipeline().Pipeline",
                                    "type": "Expression"
                                },
                                "ActivityName": "Acq Load-Capture_Log_SourceCount_Check",
                                "Message": {
                                    "value": "@concat('AcquisitionLoad - Failure : ',activity('ACT_GEN_LKP_FETCH_SOURCE_COUNT').error.message)",
                                    "type": "Expression"
                                },
                                "DataFactory_Name": {
                                    "value": "@pipeline().DataFactory",
                                    "type": "Expression"
                                },
                                "PipelineRunID": {
                                    "value": "@pipeline().RunId",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerName": {
                                    "value": "@pipeline().TriggerName",
                                    "type": "Expression"
                                },
                                "Pipeline_TriggerType": {
                                    "value": "@pipeline().TriggerType",
                                    "type": "Expression"
                                },
                                "RequestRunDateTime": {
                                    "value": "@formatDateTime(utcnow())",
                                    "type": "Expression"
                                },
                                "LoadProcessType": "Acq Load",
                                "TargetZoneID": {
                                    "value": "@pipeline().globalParameters.AcquisitionZoneID",
                                    "type": "Expression"
                                },
                                "ProcessingStatus": "Failure",
                                "SourceZoneID": {
                                    "value": "@pipeline().globalParameters.LandingZoneID",
                                    "type": "Expression"
                                },
                                "INFO_TYPE": "ERROR",
                                "Pipeline_TriggerTime": {
                                    "value": "@pipeline().TriggerTime",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ACT_GEN_LKP_FETCH_SOURCE_COUNT",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "ACT_GEN_EXEC_CAPTURE_COUNT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureDataLakeStoreReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_ADLS_TARGET_DATASET_PARQUET",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FolderPath": {
                                        "value": "@pipeline().parameters.TargetFolderPath",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@{replace(pipeline().parameters.TargetFileName,'json','parquet')}",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": true
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "TargetFolderPath": {
                        "type": "string"
                    },
                    "ObjectName": {
                        "type": "string"
                    },
                    "DeltaID": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "int"
                    },
                    "RequestItemID": {
                        "type": "int"
                    },
                    "IncrementValue": {
                        "type": "string"
                    },
                    "ActvityID": {
                        "type": "string"
                    },
                    "PipelineRunID": {
                        "type": "string"
                    },
                    "OffsetValue": {
                        "type": "string"
                    },
                    "TargetFileName": {
                        "type": "string"
                    },
                    "SourceFileName": {
                        "type": "string"
                    },
                    "SourceFolderPath": {
                        "type": "string"
                    },
                    "TargetDeltaRecordCount": {
                        "type": "string"
                    },
                    "SourceDeltaRecordCount": {
                        "type": "string"
                    },
                    "ExtractionStartTime": {
                        "type": "string"
                    },
                    "ExtractionDuration": {
                        "type": "int"
                    }
                },
                "folder": {
                    "name": "IngestionFramework - Land to Acq/JSON"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:08Z"
            },
            "etag": "1500d649-0000-0c00-0000-632aa7000000"
        },
        {
            "id": "/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines/DATABRICKS_UAM_PIPELINE",
            "name": "DATABRICKS_UAM_PIPELINE",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "properties": {
                "activities": [
                    {
                        "name": "Switch Activity",
                        "type": "Switch",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "on": {
                                "value": "@string(pipeline().parameters.REQUEST_TYPE_ID)",
                                "type": "Expression"
                            },
                            "cases": [
                                {
                                    "value": "1",
                                    "activities": [
                                        {
                                            "name": "ACT_NOTEBOOK_RESOURCE_CREATE",
                                            "type": "DatabricksNotebook",
                                            "dependsOn": [],
                                            "policy": {
                                                "timeout": "7.00:00:00",
                                                "retry": 0,
                                                "retryIntervalInSeconds": 30,
                                                "secureOutput": false,
                                                "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                                "notebookPath": "/Central Platform Team/SCIM_API (1)/CLUSTER_WORKSPACE_CREATE",
                                                "baseParameters": {
                                                    "OBJECT_TYPE_ID": {
                                                        "value": "@string(pipeline().parameters.OBJECT_TYPE_ID)",
                                                        "type": "Expression"
                                                    },
                                                    "RESOURCE_NAME": {
                                                        "value": "@pipeline().parameters.REQUESTED_OBJECT_NAME",
                                                        "type": "Expression"
                                                    },
                                                    "ENVIRONMENT_ID": {
                                                        "value": "@string(pipeline().parameters.EVIRONMENT_ID)",
                                                        "type": "Expression"
                                                    },
                                                    "SQL_SERVER": {
                                                        "value": "@pipeline().globalParameters.DataCatalogueSQLServer",
                                                        "type": "Expression"
                                                    },
                                                    "SQL_DB": {
                                                        "value": "@pipeline().globalParameters.DataCatalogueSQLDb",
                                                        "type": "Expression"
                                                    },
                                                    "USER_ID_KEY": {
                                                        "value": "@pipeline().globalParameters.SecretNameDevUserIdSQL",
                                                        "type": "Expression"
                                                    },
                                                    "PWD_KEY": {
                                                        "value": "@pipeline().globalParameters.SecretNameDevPwdSQL",
                                                        "type": "Expression"
                                                    },
                                                    "FIRST_APPROVER_MAIL_ID": {
                                                        "value": "@pipeline().parameters.FIRST_APPROVER_MAIL_ID",
                                                        "type": "Expression"
                                                    },
                                                    "SECOND_APRROVER_MAIL_ID": {
                                                        "value": "@pipeline().parameters.SECOND_APRROVER_MAIL_ID",
                                                        "type": "Expression"
                                                    },
                                                    "PRIMARY_DELEGATE_ID": {
                                                        "value": "@pipeline().parameters.PRIMARY_DELEGATE_ID",
                                                        "type": "Expression"
                                                    },
                                                    "SECONDARY_DELEGATE_ID": {
                                                        "value": "@pipeline().parameters.SECONDARY_DELEGATE_ID",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "linkedServiceName": {
                                                "referenceName": "LS_Databricks_Datacatalogue_MSI",
                                                "type": "LinkedServiceReference",
                                                "parameters": {
                                                    "DatabricksWorkspace": {
                                                        "value": "@pipeline().globalParameters.DatabricksURL",
                                                        "type": "Expression"
                                                    },
                                                    "DatabricksCluster": {
                                                        "value": "@pipeline().globalParameters.DataCatalogueClusterID",
                                                        "type": "Expression"
                                                    },
                                                    "DatabricksResource": {
                                                        "value": "@pipeline().globalParameters.DatabricksResourceID",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "2",
                                    "activities": [
                                        {
                                            "name": "ACT_NOTEBOOK_USER_PROVISIONING",
                                            "type": "DatabricksNotebook",
                                            "dependsOn": [],
                                            "policy": {
                                                "timeout": "7.00:00:00",
                                                "retry": 0,
                                                "retryIntervalInSeconds": 30,
                                                "secureOutput": false,
                                                "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                                "notebookPath": "/Central Platform Team/SCIM_API (1)/USER_PROVISIONING",
                                                "baseParameters": {
                                                    "USER_MAIL": {
                                                        "value": "@pipeline().parameters.REQUESTOR_MAIL_ID",
                                                        "type": "Expression"
                                                    },
                                                    "GROUP_ID": {
                                                        "value": "@string(pipeline().parameters.GROUP_ID)",
                                                        "type": "Expression"
                                                    },
                                                    "ENVIRONMENT_ID": {
                                                        "value": "@string(pipeline().parameters.EVIRONMENT_ID)",
                                                        "type": "Expression"
                                                    },
                                                    "GROUP_NAME": {
                                                        "value": "@pipeline().parameters.GROUP_NAME",
                                                        "type": "Expression"
                                                    },
                                                    "OBJECT_TYPE_ID": {
                                                        "value": "@string(pipeline().parameters.OBJECT_TYPE_ID)",
                                                        "type": "Expression"
                                                    },
                                                    "SQL_SERVER": {
                                                        "value": "@pipeline().globalParameters.DataCatalogueSQLServer",
                                                        "type": "Expression"
                                                    },
                                                    "SQL_DB": {
                                                        "value": "@pipeline().globalParameters.DataCatalogueSQLDb",
                                                        "type": "Expression"
                                                    },
                                                    "USER_ID_KEY": {
                                                        "value": "@pipeline().globalParameters.SecretNameDevUserIdSQL",
                                                        "type": "Expression"
                                                    },
                                                    "PWD_KEY": {
                                                        "value": "@pipeline().globalParameters.SecretNameDevPwdSQL",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "linkedServiceName": {
                                                "referenceName": "LS_Databricks_Datacatalogue_MSI",
                                                "type": "LinkedServiceReference",
                                                "parameters": {
                                                    "DatabricksWorkspace": {
                                                        "value": "@pipeline().globalParameters.DatabricksURL",
                                                        "type": "Expression"
                                                    },
                                                    "DatabricksCluster": {
                                                        "value": "@pipeline().globalParameters.DataCatalogueClusterID",
                                                        "type": "Expression"
                                                    },
                                                    "DatabricksResource": {
                                                        "value": "@pipeline().globalParameters.DatabricksResourceID",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "3",
                                    "activities": [
                                        {
                                            "name": "ACT_NOTEBOOK_USER_REMOVAL",
                                            "type": "DatabricksNotebook",
                                            "dependsOn": [],
                                            "policy": {
                                                "timeout": "7.00:00:00",
                                                "retry": 0,
                                                "retryIntervalInSeconds": 30,
                                                "secureOutput": false,
                                                "secureInput": false
                                            },
                                            "userProperties": [],
                                            "typeProperties": {
                                                "notebookPath": "/Central Platform Team/SCIM_API (1)/REMOVE_USER_ACCESS",
                                                "baseParameters": {
                                                    "USER_MAIL": {
                                                        "value": "@pipeline().parameters.REQUESTOR_MAIL_ID",
                                                        "type": "Expression"
                                                    },
                                                    "GROUP_ID": {
                                                        "value": "@string(pipeline().parameters.GROUP_ID)",
                                                        "type": "Expression"
                                                    },
                                                    "ENVIRONMENT_ID": {
                                                        "value": "@string(pipeline().parameters.EVIRONMENT_ID)",
                                                        "type": "Expression"
                                                    },
                                                    "GROUP_NAME": {
                                                        "value": "@pipeline().parameters.GROUP_NAME",
                                                        "type": "Expression"
                                                    },
                                                    "SQL_SERVER": {
                                                        "value": "@pipeline().globalParameters.DataCatalogueSQLServer",
                                                        "type": "Expression"
                                                    },
                                                    "SQL_DB": {
                                                        "value": "@pipeline().globalParameters.DataCatalogueSQLDb",
                                                        "type": "Expression"
                                                    },
                                                    "USER_ID_KEY": {
                                                        "value": "@pipeline().globalParameters.SecretNameDevUserIdSQL",
                                                        "type": "Expression"
                                                    },
                                                    "PWD_KEY": {
                                                        "value": "@pipeline().globalParameters.SecretNameDevPwdSQL",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "linkedServiceName": {
                                                "referenceName": "LS_Databricks_Datacatalogue_MSI",
                                                "type": "LinkedServiceReference",
                                                "parameters": {
                                                    "DatabricksWorkspace": {
                                                        "value": "@pipeline().globalParameters.DatabricksURL",
                                                        "type": "Expression"
                                                    },
                                                    "DatabricksCluster": {
                                                        "value": "@pipeline().globalParameters.DataCatalogueClusterID",
                                                        "type": "Expression"
                                                    },
                                                    "DatabricksResource": {
                                                        "value": "@pipeline().globalParameters.DatabricksResourceID",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "EVIRONMENT_ID": {
                        "type": "int"
                    },
                    "REQUEST_TYPE_ID": {
                        "type": "int"
                    },
                    "OBJECT_TYPE_ID": {
                        "type": "int"
                    },
                    "REQUESTOR_MAIL_ID": {
                        "type": "string"
                    },
                    "GROUP_NAME": {
                        "type": "string"
                    },
                    "REQUESTED_OBJECT_NAME": {
                        "type": "string"
                    },
                    "GROUP_ID": {
                        "type": "int"
                    },
                    "FIRST_APPROVER_MAIL_ID": {
                        "type": "string"
                    },
                    "SECOND_APRROVER_MAIL_ID": {
                        "type": "string"
                    },
                    "PRIMARY_DELEGATE_ID": {
                        "type": "string"
                    },
                    "SECONDARY_DELEGATE_ID": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Platform Enhancements/UAM_DATABRICKS"
                },
                "annotations": [],
                "lastPublishTime": "2022-09-21T05:54:04Z"
            },
            "etag": "15007c49-0000-0c00-0000-632aa6fc0000"
        }
    ],
    "nextLink": "https://management.azure.com/subscriptions/d3476e06-715a-4eee-ba35-969f55a91d5c/resourceGroups/shell-32-rg-oiutaduycrlymxtmbjay/providers/Microsoft.DataFactory/factories/shell-32-eun-adf-qjnvsyzyxvpgcfzenql/pipelines?api-version=2018-06-01&$skipToken=%2bRID%3a~h7xdAMrNyABBqgAAAABUCA%3d%3d%23RT%3a1%23TRC%3a50%23ISV%3a2%23IEO%3a65551%23QCF%3a8",
    "ADFWebActivityResponseHeaders": {
        "Pragma": "no-cache",
        "x-ms-correlation-request-id": "fce9e745-daf5-4ea5-93b6-a4f9f3769f04",
        "x-ms-ratelimit-remaining-subscription-reads": "11999",
        "x-ms-request-id": "fce9e745-daf5-4ea5-93b6-a4f9f3769f04",
        "x-ms-routing-request-id": "NORTHEUROPE:20220930T082302Z:fce9e745-daf5-4ea5-93b6-a4f9f3769f04",
        "Strict-Transport-Security": "max-age=31536000; includeSubDomains",
        "X-Content-Type-Options": "nosniff",
        "Cache-Control": "no-cache",
        "Date": "Fri, 30 Sep 2022 08:23:01 GMT",
        "Server": "Kestrel",
        "Content-Length": "718672",
        "Content-Type": "application/json; charset=utf-8",
        "Expires": "-1"
    },
    "effectiveIntegrationRuntime": "AutoResolveIntegrationRuntime (North Europe)",
    "executionDuration": 0,
    "durationInQueue": {
        "integrationRuntimeQueue": 0
    },
    "billingReference": {
        "activityType": "ExternalActivity",
        "billableDuration": [
            {
                "meterType": "AzureIR",
                "duration": 0.016666666666666666,
                "unit": "Hours"
            }
        ]
    }
}




console.log("NODE");

// const obj=JSON.parse(data)
console.log(data.value.id)
